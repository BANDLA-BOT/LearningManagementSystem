{"version":3,"sources":["courseModel.js"],"names":["mongoose","require","Schema","title","String","url","videoSchema","type","Boolean","default","thumbnail","videos","courseId","discussionSchema","Types","ref","ObjectId","videoId","question","required","askedBy","answeredBy","Date","createdAt","now","courseSchema","price","Number","rating","rate","min","max","ratedBy","reviewBy","userId","review","resources","description","section","sectionSchema","instructor","coureModel","model","module","exports"],"mappings":"aAAA,IAAMA,SAAWC,QAAQ,YAAnBD,YAAWC,IAAQD,SAADE,OAAxB,CAGEC,MAAOC,OADTC,IAAMC,OACJH,UAAOC,CAD+BG,KAAAC,QAAAC,SAAA,KAGzBF,cAAF,IAAAP,SAAAE,OAAA,CAAiBC,MAAAC,OAAjBM,UAAAN,OAHbO,OAAA,CAAAL,eASEK,iBAAQ,IAAAX,SAAAE,OAAA,CAHVU,SAAA,CAOMC,KAAAA,SAAAA,OAAmBC,MAAId,SAC3BY,IAAAA,UAEEG,QAAI,CAHqCR,KAAAP,SAAAE,OAAAY,MAAAE,SAK3CC,IAAAA,UAEEF,SAAI,CAPqCR,KAAAH,OAS3Cc,UAAS,GAEPC,QAAAA,CAXyCZ,KAAAP,SAAAE,OAAAY,MAAAE,SAa3CI,IAAAA,WAEEL,OAAI,CAfqCR,KAAAH,QAkBzCG,WAAKH,CAlBoCG,KAAAP,SAAAE,OAAAY,MAAAE,SAoB3CK,IAAAA,cAEEN,UAAI,CAtBqCR,KAAAe,KAwB3CC,QAASD,KAACE,SAONC,aAAe,IAAIzB,SAASE,OAAO,CACvCC,MAAO,CACLI,KAAMH,QAAU,WAChBe,UAAU,GAEZO,MAAO,CACLnB,KAAMoB,OACNR,UAAU,EACVV,QAAA,GAEFmB,OAAQ,CAAC,CACPC,KAAI,CACFtB,KAAIoB,OACJG,IAAG,EACHC,IAAG,EACHtB,QAAA,GAEFuB,QAAO,CACLzB,KAAIP,SAASE,OAARY,MAAAE,SACLD,IAAG,aAMHkB,QAAAA,CACEC,CACE3B,SAAMP,CACNe,OAAK,CAHCR,KAAAP,SAAAE,OAAAY,MAAAE,SAKRmB,IAAQ,WAAAA,OAAA,CALA5B,KAAAH,WAYZgC,UArCqC,CA0CvCC,CACE9B,MAAMH,OA3C+BC,IAAAD,SA+CrCG,YAAMP,CACNe,KAAKX,QAEPkC,YAAUC,CAAAA,kBAlDZC,WAAA,CAqDMC,KAAAA,SAAazC,OAAS0C,MAAM1B,SAClC2B,IAAOC,cAJLN,QAAS,CAACC,iBAGNE,WAAazC,SAAS0C,MAAM,SAAUjB,cAC5CkB,OAAOC,QAAUH","file":"courseModel.min.js","sourcesContent":["const mongoose = require(\"mongoose\");\r\n\r\nconst videoSchema = new mongoose.Schema({\r\n  title: String,\r\n  url: String,\r\n  completed: { type: Boolean, default: false },\r\n});\r\n\r\nconst sectionSchema = new mongoose.Schema({\r\n  title: String,\r\n  thumbnail: String,\r\n  videos: [videoSchema],\r\n});\r\n\r\n\r\nconst discussionSchema = new mongoose.Schema({\r\n  courseId:{\r\n    type:mongoose.Schema.Types.ObjectId,\r\n    ref:'course'\r\n  },\r\n  videoId:{\r\n    type:mongoose.Schema.Types.ObjectId,\r\n    ref:'course'\r\n  },\r\n  question:{\r\n    type:String,\r\n    required:true,\r\n  },\r\n  askedBy:{\r\n    type:mongoose.Schema.Types.ObjectId,\r\n    ref:'student'\r\n  },\r\n  answer:{\r\n    type:String,\r\n  },\r\n  answeredBy:{\r\n    type:mongoose.Schema.Types.ObjectId,\r\n    ref:'instructor'\r\n  },\r\n  createdAt:{\r\n    type:Date,\r\n    default:Date.now()\r\n  }\r\n})\r\n\r\n\r\nconst courseSchema = new mongoose.Schema({\r\n  title: {\r\n    type: String || \"untitled\",\r\n    required: true,\r\n  },\r\n  price: {\r\n    type: Number,\r\n    required: true,\r\n    default: 0,\r\n  },\r\n  rating: [{\r\n    rate:{\r\n      type:Number,\r\n      min:1,\r\n      max:5,\r\n      default:1\r\n    },\r\n    ratedBy:{\r\n      type:mongoose.Schema.Types.ObjectId,\r\n      ref:'student'\r\n    }\r\n  }\r\n  ],\r\n  reviews: [\r\n    {\r\n      reviewBy: {\r\n        userId: {\r\n          type: mongoose.Schema.Types.ObjectId,\r\n          ref: \"student\",\r\n        },\r\n        review: {\r\n          type: String,\r\n        },\r\n      },\r\n    },\r\n  ],\r\n  resources: [\r\n    {\r\n      title: String,\r\n      url: String,\r\n    },\r\n  ],\r\n  description: {\r\n    type: String,\r\n  },\r\n  discussions:[discussionSchema],\r\n  instructor: {\r\n    type: mongoose.Schema.Types.ObjectId,\r\n    ref: \"instructor\",\r\n  },\r\n  section: [sectionSchema],\r\n});\r\n\r\nconst coureModel = mongoose.model(\"course\", courseSchema);\r\nmodule.exports = coureModel;\r\n"]}