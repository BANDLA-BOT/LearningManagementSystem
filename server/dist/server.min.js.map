{"version":3,"sources":["server.js"],"names":["express","require","DB","path","cookieParser","bodyParser","dashboardRoutes","addReview","authAdmin","discussions","cors","app","corsOptions","origin","callback","allowedOrigins","indexOf","Error","config","credentials","json","use","authRoutes","createCourseRoute","reviewRoute","listen","process","env","PORT","log"],"mappings":"aAAA,IAAMA,QAAUC,QAAQ,WAClBC,GAAKD,QAAQ,iBADbD,WAAUC,QAAQ,eAGlBE,KAAOF,QAAQ,QAFbG,aAAWH,QAAA,iBACbI,WAAaJ,QAAQ,kCAKrBK,gBAAkBL,QAAQ,uCAJ1BE,kBAANF,QAAA,oCAMMM,UAAYN,QAAQ,mCALpBG,YAAeH,QAAQ,kCAUvBO,UAAYP,QAAQ,0BAPpBK,UAAAA,QAAkBL,+BAElBM,eAAmBN,QAAC,+BAWpBQ,YAAcR,QAAQ,sCAGtBS,KAAOT,QAAQ,QATrBA,QAAMO,UAAYP,SAWlB,IAAMU,IAAMX,UALNS,eAAcR,CAAAA,yBAYdW,YAAc,CATpBC,OAAU,SAAWA,EAArBC,IAW4C,IAApCC,eAAeC,QAAQH,IAAmBA,EAT5CF,EAAMX,IAAZiB,MAEA,wBAHAhB,EAAQ,MAAUiB,IAgBhBC,aAAa,GAHTL,IAAAA,IAAAA,QAASM,QACVT,IAAAU,IAAAX,KAAAE,cACFD,IAPiBU,IAAAjB,gBAQlBe,IAAAA,IAAAA,WARkBC,QAmBpBT,IAAIU,IAAI,WAAYrB,QAAO,OAAQ,YAnBfW,IAApBU,IAAA,aAAArB,QAAA,OAAA,cAkBAW,IAAIU,IAAIhB,oBAARiB,YACAX,IAAIU,IAAI,yBAAmBf,iBAC3BK,IAAIU,IAAI,sBAAqBE,mBAO7BZ,IAAIU,IAAI,sBAAuBd,WAD/BI,IAAIU,IAAI,kBAAAb,WACRG,IAAIU,IAAI,uBAAuBd,WAK/BI,IAAIU,IAAI,oBAAqBG,aAA7Bb,IAAIU,IAAI,uBAAqBG,gBAI7Bb,IAAIU,IAAI,6BAA8BZ,aAGtCE,IAAIc,OAAOC,QAAQC,IAAIC,KAAM,WAA7BjB,QAAAkB,IAAWH,oBAAkBA,QAAMC,IAAAC","file":"server.min.js","sourcesContent":["const express = require(\"express\");\r\nconst DB = require(\"./utils/db.js\");\r\nconst bodyParser = require('body-parser')\r\nconst path = require('path')\r\nconst cookieParser = require('cookie-parser')\r\n//Student imports \r\nconst authRoutes = require(\"./routes/student/authRoutes.js\");\r\nconst dashboardRoutes = require(\"./routes/student/dashboardRoutes.js\");\r\nconst createCourseRoute = require(\"./routes/student/createCourse.js\");\r\nconst addReview = require(\"./routes/student/reviewRoute.js\");\r\nconst reviewRoute = require('./routes/admin/reviewRoutes.js')\r\n\r\n\r\n//Admin imports\r\nconst authAdmin = require('./routes/admin/auth.js')\r\nconst dashboard = require('./routes/admin/dashboard.js')\r\n\r\n//Instructor imports \r\n\r\nconst authInstructor = require('./routes/instructor/auth.js')\r\nconst discussions = require('./routes/instructor/discussions.js')\r\n\r\n\r\nconst cors = require(\"cors\");\r\nrequire(\"dotenv\").config();\r\nconst app = express();\r\n\r\n//DB\r\nDB;\r\n\r\n//middlewares\r\nconst allowedOrigins = ['http://localhost:5173'];\r\nconst corsOptions = {\r\n  origin: function (origin, callback) {\r\n    if (allowedOrigins.indexOf(origin) !== -1 || !origin) {\r\n      callback(null, true);\r\n    } else {\r\n      callback(new Error('Not allowed by CORS'));\r\n    }\r\n  },\r\n  credentials: true, // This is necessary for the client to include credentials\r\n};\r\n\r\n\r\n\r\n\r\n\r\napp.use(express.json());\r\napp.use(cors(corsOptions));\r\napp.use(cookieParser())\r\napp.use(bodyParser.json())\r\napp.use('/uploads', express.static('uploads'));\r\napp.use('/resources', express.static('resources'))\r\n\r\n \r\n//student API's\r\napp.use(\"/api/student/auth\", authRoutes);\r\napp.use(\"/api/student/dashboard\", dashboardRoutes);\r\napp.use(\"/api/student/course\", createCourseRoute);\r\napp.use(\"/api/student/review\", addReview);\r\n\r\n//Admin API's\r\napp.use(\"/api/admin/auth\", authAdmin);\r\napp.use(\"/api/admin/dashboard\", dashboard)\r\napp.use('/api/admin/review', reviewRoute)\r\n\r\n//Instructor API's \r\napp.use('/api/instructor/auth', authInstructor)\r\napp.use('/api/instructor/discussion', discussions)\r\n\r\n//server\r\napp.listen(process.env.PORT, () => {\r\n  console.log(\"Server running on\", process.env.PORT);\r\n});\r\n"]}