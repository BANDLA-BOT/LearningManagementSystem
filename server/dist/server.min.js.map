{"version":3,"sources":["server.js"],"names":["express","require","DB","path","cookieParser","bodyParser","dashboardRoutes","reviewRoute","authRoutes","dashboard","authInstructor","discussions","cors","app","corsOptions","origin","callback","allowedOrigins","indexOf","Error","config","credentials","json","use","addReview","authAdmin","createCourseRoute","listen","process","env","PORT","console","log"],"mappings":"aAAA,IAAMA,QAAUC,QAAQ,WAClBC,GAAKD,QAAQ,iBADbD,WAAUC,QAAQ,eAGlBE,KAAOF,QAAQ,QAFbG,aAAWH,QAAA,iBACbI,WAAaJ,QAAQ,kCAKrBK,gBAAkBL,QAAQ,uCAJ1BE,UAAcF,QAApB,mCAMMM,YAAcN,QAAQ,kCAHtBO,UAAaP,QAAQ,0BAQrBQ,UAAYR,QAAQ,+BAIpBS,eAAiBT,QAAQ,+BATzBM,kBAAsBN,QAAA,oCAWtBU,YAAcV,QAAQ,sCAGtBW,KAAOX,QAAQ,QATrBA,QAAMQ,UAAYR,SAWlB,IAAMY,IAAMb,UALNW,eAAcV,CAAAA,yBAYda,YAAc,CATpBC,OAAU,SAAWA,EAArBC,IAW4C,IAApCC,eAAeC,QAAQH,IAAmBA,EAT5CF,EAAMb,IAAZmB,MAEA,wBAHAlB,EAAQ,MAAUmB,IAgBhBC,aAAa,GAHTL,IAAAA,IAAAA,QAASM,QACVT,IAAAU,IAAAX,KAAAE,cACFD,IAPiBU,IAAAnB,gBAQlBiB,IAAAA,IAAAA,WARkBC,QAAAT,IAApBU,IAAA,WAAAvB,QAAA,OAAA,YAeAa,IAAIU,IAAIvB,aAARA,QAAA,OAAA,cACAa,IAAIU,IAAIX,+BAARZ,QAAA,OAAA,gCAKAa,IAAIU,IAAI,oBAAqBf,YAC7BK,IAAIU,IAAI,yBAAAjB,iBAMRO,IAAIU,IAAI,sBAAuBC,WAA/BX,IAAIU,IAAI,kBAAAE,WAIRZ,IAAIU,IAAI,uBAAwBd,WADhCI,IAAIU,IAAI,oBAAmBE,aAK3BZ,IAAIU,IAAI,uBAAwBb,gBAAhCG,IAAIU,IAAI,4BAAwBb,mBAChCG,IAAIU,IAAI,6BAA6BG,aAIrCb,IAAIc,OAAOC,QAAQC,IAAIC,KAAM,WAC3BC,QAAQC,IAAI,oBAAqBJ,QAAQC,IAAIC","file":"server.min.js","sourcesContent":["const express = require(\"express\");\r\nconst DB = require(\"./utils/db.js\");\r\nconst bodyParser = require('body-parser')\r\nconst path = require('path')\r\nconst cookieParser = require('cookie-parser')\r\n//Student imports \r\nconst authRoutes = require(\"./routes/student/authRoutes.js\");\r\nconst dashboardRoutes = require(\"./routes/student/dashboardRoutes.js\");\r\nconst addReview = require(\"./routes/student/reviewRoute.js\");\r\nconst reviewRoute = require('./routes/admin/reviewRoutes.js')\r\n\r\n\r\n//Admin imports\r\nconst authAdmin = require('./routes/admin/auth.js')\r\nconst dashboard = require('./routes/admin/dashboard.js')\r\n\r\n//Instructor imports \r\n\r\nconst authInstructor = require('./routes/instructor/auth.js')\r\nconst createCourseRoute = require(\"./routes/instructor/dashboard.js\");\r\nconst discussions = require('./routes/instructor/discussions.js')\r\n\r\n\r\nconst cors = require(\"cors\");\r\nrequire(\"dotenv\").config();\r\nconst app = express();\r\n\r\n//DB\r\nDB;\r\n\r\n//middlewares\r\nconst allowedOrigins = ['http://localhost:5173'];\r\nconst corsOptions = {\r\n  origin: function (origin, callback) {\r\n    if (allowedOrigins.indexOf(origin) !== -1 || !origin) {\r\n      callback(null, true);\r\n    } else {\r\n      callback(new Error('Not allowed by CORS'));\r\n    }\r\n  },\r\n  credentials: true, // This is necessary for the client to include credentials\r\n};\r\n\r\n\r\n\r\n\r\n\r\napp.use(express.json());\r\napp.use(cors(corsOptions));\r\napp.use(cookieParser())\r\napp.use(bodyParser.json())\r\n\r\napp.use('/uploads', express.static('uploads'));\r\napp.use('/resources', express.static('resources'))\r\napp.use('/instructorProfilesPicUpdate', express.static('instructorProfilesPicUpdate'))\r\n\r\n \r\n//student API's\r\napp.use(\"/api/student/auth\", authRoutes);\r\napp.use(\"/api/student/dashboard\", dashboardRoutes);\r\napp.use(\"/api/student/review\", addReview);\r\n\r\n//Admin API's\r\napp.use(\"/api/admin/auth\", authAdmin);\r\napp.use(\"/api/admin/dashboard\", dashboard)\r\napp.use('/api/admin/review', reviewRoute)\r\n\r\n//Instructor API's \r\napp.use('/api/instructor/auth', authInstructor)\r\napp.use(\"/api/instructor/dashboard\", createCourseRoute);\r\napp.use('/api/instructor/discussion', discussions)\r\n\r\n//server\r\napp.listen(process.env.PORT, () => {\r\n  console.log(\"Server running on\", process.env.PORT);\r\n});\r\n"]}