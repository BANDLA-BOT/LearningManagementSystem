{"version":3,"sources":["server.js"],"names":["express","require","DB","bodyParser","path","cookieParser","authRoutes","dashboardRoutes","createCourseRoute","addReview","reviewRoute","authAdmin","dashboard","authInstructor","discussions","cors","config","app","allowedOrigins","corsOptions","origin","callback","indexOf","Error","credentials","use","json","listen","process","env","PORT","console","log"],"mappings":"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","sourcesContent":["const express = require(\"express\");\r\nconst DB = require(\"./utils/db.js\");\r\nconst bodyParser = require('body-parser')\r\nconst path = require('path')\r\nconst cookieParser = require('cookie-parser')\r\n//Student imports \r\nconst authRoutes = require(\"./routes/student/authRoutes.js\");\r\nconst dashboardRoutes = require(\"./routes/student/dashboardRoutes.js\");\r\nconst createCourseRoute = require(\"./routes/student/createCourse.js\");\r\nconst addReview = require(\"./routes/student/reviewRoute.js\");\r\nconst reviewRoute = require('./routes/admin/reviewRoutes.js')\r\n\r\n\r\n//Admin imports\r\nconst authAdmin = require('./routes/admin/auth.js')\r\nconst dashboard = require('./routes/admin/dashboard.js')\r\n\r\n//Instructor imports \r\n\r\nconst authInstructor = require('./routes/instructor/auth.js')\r\nconst discussions = require('./routes/instructor/discussions.js')\r\n\r\n\r\nconst cors = require(\"cors\");\r\nrequire(\"dotenv\").config();\r\nconst app = express();\r\n\r\n//DB\r\nDB;\r\n\r\n//middlewares\r\nconst allowedOrigins = ['http://localhost:5173'];\r\nconst corsOptions = {\r\n  origin: function (origin, callback) {\r\n    if (allowedOrigins.indexOf(origin) !== -1 || !origin) {\r\n      callback(null, true);\r\n    } else {\r\n      callback(new Error('Not allowed by CORS'));\r\n    }\r\n  },\r\n  credentials: true, // This is necessary for the client to include credentials\r\n};\r\n\r\n\r\n\r\n\r\n\r\napp.use(express.json());\r\napp.use(cors(corsOptions));\r\napp.use(cookieParser())\r\napp.use(bodyParser.json())\r\napp.use('/uploads', express.static('uploads'));\r\napp.use('/resources', express.static('resources'))\r\n\r\n \r\n//student API's\r\napp.use(\"/api/student/auth\", authRoutes);\r\napp.use(\"/api/student/dashboard\", dashboardRoutes);\r\napp.use(\"/api/student/course\", createCourseRoute);\r\napp.use(\"/api/student/review\", addReview);\r\n\r\n//Admin API's\r\napp.use(\"/api/admin/auth\", authAdmin);\r\napp.use(\"/api/admin/dashboard\", dashboard)\r\napp.use('/api/admin/review', reviewRoute)\r\n\r\n//Instructor API's \r\napp.use('/api/instructor/auth', authInstructor)\r\napp.use('/api/instructor/discussion', discussions)\r\n\r\n//server\r\napp.listen(process.env.PORT, () => {\r\n  console.log(\"Server running on\", process.env.PORT);\r\n});\r\n"],"file":"server.dev.js"}