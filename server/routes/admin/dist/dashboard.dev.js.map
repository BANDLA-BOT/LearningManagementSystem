{"version":3,"sources":["dashboard.js"],"names":["express","require","multer","cloudinary","v2","router","Router","fs","adminTokenDecode","verifyToken","instructorTokenVerify","dashboardController","searchController","createCourse","resourceController","uploadVideos","getProfile","enrollCourse","topRanks","progressController","courseProgress","filter","sorting","markVideoAsComplete","completedCourses","ratingController","topDiscussions","askQuestion","editProfile","login","resetPasswordLink","resetPassword","register","editPassword","editInstructorProfile","mentorsController","registerController","loginController","questionsController","answerController","storage","memoryStorage","upload","config","cloud_name","api_key","process","env","API_KEY","api_secret","API_SECRET","resourceStorage","diskStorage","destination","req","file","cb","filename","Date","now","originalname","uploadResources","existsSync","mkdirSync","InstructorProfileStorage","InstructorUploads","updateProfilePic","uploadProfilePic","get","post","single","put","module","exports"],"mappings":"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","sourcesContent":["const express = require(\"express\");\r\nconst multer = require(\"multer\");\r\nconst cloudinary = require(\"cloudinary\").v2;\r\nconst router = express.Router();\r\nconst fs = require('fs')\r\n\r\n//JWT DECODED TOKENS\r\n\r\nconst adminTokenDecode = require(\"../../utils/AdminTokenVerify.js\");\r\nconst verifyToken = require(\"../../utils/verifyToken.js\");\r\nconst instructorTokenVerify = require('../../utils/instructorTokenVerify.js')\r\n\r\n//Admin imports\r\n\r\nconst {\r\n  dashboardController,\r\n  searchController,\r\n  createCourse,\r\n  resourceController,\r\n  uploadVideos,\r\n} = require(\"../../controllers/admin/dashboardController.js\");\r\n\r\n//Student imports\r\n\r\nconst {\r\n  getProfile,\r\n  enrollCourse,\r\n  topRanks,\r\n  progressController,\r\n  courseProgress,\r\n  filter,\r\n  sorting,\r\n  markVideoAsComplete,\r\n  completedCourses,\r\n  ratingController,\r\n  topDiscussions,\r\n  askQuestion,\r\n  editProfile,\r\n} = require(\"../../controllers/student/dashboardcontroller.js\");\r\nconst { \r\n  login, \r\n  resetPasswordLink, \r\n  resetPassword, \r\n  register \r\n} = require(\"../../controllers/student/authController.js\");\r\n\r\n\r\n//Instructor Imports\r\n\r\nconst {\r\n  editPassword,\r\n  editInstructorProfile,\r\n  mentorsController,\r\n} = require(\"../../controllers/instructor/dashboardController.js\");\r\nconst { \r\n  registerController,\r\n   loginController\r\n} = require(\"../../controllers/instructor/authController.js\");\r\nconst questionsController = require(\"../../controllers/instructor/questionController.js\");\r\nconst answerController = require(\"../../controllers/instructor/answerController.js\");\r\n\r\n\r\n\r\n\r\n\r\n//Multer for videos upload\r\nconst storage = multer.memoryStorage();\r\nconst upload = multer({ storage: storage });\r\n\r\n//Cloudinary for videos\r\ncloudinary.config({\r\n  cloud_name: \"diqptwlqn\",\r\n  api_key: process.env.API_KEY,\r\n  api_secret: process.env.API_SECRET,\r\n});\r\n\r\n\r\n//Multer to upload resources\r\nconst resourceStorage = multer.diskStorage({\r\n  destination: (req, file, cb) => {\r\n    cb(null, \"resources\");\r\n  },\r\n  filename: (req, file, cb) => {\r\n    cb(null, `${Date.now()}-${file.originalname}`);\r\n  },\r\n});\r\nconst uploadResources = multer({\r\n  storage: resourceStorage,\r\n});\r\n\r\n\r\n//Multer for profile photo for Instructor\r\nif(!fs.existsSync('/uploads')){\r\n  fs.mkdirSync('/uploads')\r\n}\r\nconst InstructorProfileStorage = multer.diskStorage({\r\n  destination:(req,file,cb)=>{\r\n      cb(null, '/uploads')\r\n  },\r\n  filename:(req, file, cb)=>{\r\n      cb(null, `${Date.now()}-Instructor-${file.originalname}`)\r\n  }\r\n})\r\nconst InstructorUploads = multer({\r\n  storage:InstructorProfileStorage\r\n})\r\n\r\n//Multer for update profilePicture of instructor\r\n\r\nconst updateProfilePic = multer.diskStorage({\r\n  destination:(req,file,cb)=>{\r\n    cb(null, 'instructorProfilesPics')\r\n  },\r\n  filename:(req,file,cb)=>{\r\n    cb(null,`${Date.now()}-${file.originalname}`)\r\n}\r\n})\r\nconst uploadProfilePic = multer({\r\n  storage:updateProfilePic\r\n})\r\n\r\n\r\n\r\n//admin\r\nrouter.get(\"/\", adminTokenDecode, dashboardController);\r\nrouter.get(\"/search\", adminTokenDecode, searchController);\r\nrouter.post(\"/create/:instructorId\", adminTokenDecode, createCourse);\r\nrouter.post(\"/uploadvideos/:courseId\",upload.single(\"video\"),adminTokenDecode,uploadVideos);\r\nrouter.post(\"/resources/:courseId\",uploadResources.single(\"file\"),adminTokenDecode,resourceController);\r\n\r\n\r\n//student Access\r\nrouter.post('/student/register', upload.single('profile'), adminTokenDecode, register);\r\nrouter.post('/student/request-reset-password',adminTokenDecode, resetPasswordLink)\r\nrouter.post('/student/reset-password/:token', adminTokenDecode,resetPassword)\r\nrouter.post(\"/student/login\", adminTokenDecode, login);\r\nrouter.get(\"/student/profile\", verifyToken, getProfile);\r\nrouter.put(\"/student/editProfile\", verifyToken, editProfile);\r\nrouter.put(\"/stuednt/editpassword\", verifyToken, editPassword);\r\nrouter.post(\"/student/enroll/:courseId\", verifyToken, enrollCourse);\r\nrouter.put(\"/student/markvideoascomplete/:courseId/:videoArrId/:videoId\",verifyToken,markVideoAsComplete);\r\nrouter.get(\"/student/completedCourses\", verifyToken, completedCourses);\r\nrouter.get(\"/student/ranking\", verifyToken, topRanks);\r\nrouter.get(\"/student/progress\", verifyToken, progressController);\r\nrouter.get(\"/student/courseprogress\", verifyToken, courseProgress);\r\nrouter.get(\"/student/filter\", filter);\r\nrouter.get(\"/student/sorting\", sorting);\r\nrouter.post(\"/student/rate/:courseId/rate\", verifyToken, ratingController);\r\nrouter.post(\"/student/ask/:courseId/:videoId\", verifyToken, askQuestion);\r\nrouter.get(\"/student/topDiscuss/:courseId/:videoId\",verifyToken,topDiscussions);\r\n\r\n\r\n\r\n//Instructor Access\r\nrouter.post('/instructor/register', upload.single('profile'), adminTokenDecode, registerController)\r\nrouter.post('/instructor/login', adminTokenDecode, loginController)\r\nrouter.put('/instructor/editprofile', uploadProfilePic.single('updatedProfilePic'),instructorTokenVerify, editInstructorProfile)\r\nrouter.put('/instructor/editpassword', instructorTokenVerify, editPassword)\r\nrouter.get('/instructor/mentors', instructorTokenVerify, mentorsController)\r\nrouter.get('/instructor/discussions', instructorTokenVerify, questionsController)\r\nrouter.post('/instructor/answer/:id/:courseId', instructorTokenVerify, answerController)\r\n\r\nmodule.exports = router;\r\n"],"file":"dashboard.dev.js"}