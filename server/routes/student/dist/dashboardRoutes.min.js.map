{"version":3,"sources":["dashboardRoutes.js"],"names":["express","require","verifyToken","editProfile","getProfile","enrollCourse","topRanks","progressController","courseProgress","filter","sorting","resourceController","markVideoAsComplete","completedCourses","editPassword","showEnrolled","ratingController","Router","storage","multer","diskStorage","destination","filename","req","file","cb","Date","now","originalname","upload","router","put","post","get","single","module","exports"],"mappings":"aAAA,IAAMA,QAAUC,QAAQ,WAClBC,YAAcD,QAAQ,uCAY1BE,QAAAA,oDAVAC,oBAAAA,WAFFC,sBAAAA,aAIEC,kBAAAA,SACAC,4BAAAA,mBACAC,wBAAAA,eACAC,gBAAAA,OACAC,iBAAAA,QACAC,4BAAAA,mBACAC,6BAAAA,oBACAC,0BAAAA,iBACAV,qBAAAA,YACAW,sBAAAA,aACAC,sBAAAA,aACAC,0BAAAA,iBAFAF,OAAAA,QAIqB,UAHrBC,OAAAA,QAIqBE,SAMjBC,QAAUC,OAAOC,YAAY,CAAnCC,YAAgBF,SAAAA,EAAAA,EAAOC,GACrBC,EAAAA,KAAW,cAEVC,SAHgC,SAAAC,EAAAC,EAAAC,GAIjCH,EAAAA,KAAAA,GAAAA,OAASI,KAAAC,MAATL,KAAAA,OAASE,EAAAI,kBAJXC,OAAAV,OAAA,CAQAD,QAAYA,UAOZY,OAAOC,IAAI,WAAA7B,YAAgBA,YAC3B4B,OAAOC,IAAI,eAAX7B,YAAAC,aACA2B,OAAOE,IAAP,gBAAY9B,YAAqBA,cACjC4B,OAAOG,KAAI,oBAAe/B,YAAaa,cACvCe,OAAOE,IAAP,cAAY9B,YAAwB2B,cAApCC,OAAOE,KAAK,uBAAwBH,OAAOK,OAAO,QAAQvB,oBAG1DmB,OAAOE,KAAK,0CAA2C9B,YAAaU,qBAIpEkB,OAAOG,IAAI,oBAAY/B,YAAvBW,kBAAAiB,OAAOG,IAAI,WAAY/B,YAAaI,UAKpCwB,OAAOG,IAAI,YAAWxB,YAAtBF,oBACAuB,OAAOG,IAAI,kBAAX/B,YAEAM,gBAIA2B,OAAOC,IAAAA,UAAUN,QANjBA,OAAOG,IAAI,WAAYvB,SAIvBoB,OAAOE,KAAK,uBAAwB9B,YAAac,kBAEjDmB,OAAOC,QAAUN","file":"dashboardRoutes.min.js","sourcesContent":["const express = require(\"express\");\r\nconst verifyToken = require(\"../../utils/verifyToken.js\");\r\nconst {\r\n  getProfile,\r\n  enrollCourse,\r\n  topRanks,\r\n  progressController,\r\n  courseProgress,\r\n  filter,\r\n  sorting,\r\n  resourceController,\r\n  markVideoAsComplete,\r\n  completedCourses,\r\n  editProfile,\r\n  editPassword,\r\n  showEnrolled,\r\n  ratingController\r\n} = require('../../controllers/student/dashboardcontroller.js');\r\nconst multer = require(\"multer\");\r\nconst router = express.Router();\r\n\r\n\r\n\r\n//Multer to upload resources\r\n\r\nconst storage = multer.diskStorage({\r\n  destination:(req,file,cb)=>{\r\n    cb(null, 'resources')\r\n  },\r\n  filename:(req,file,cb)=>{\r\n    cb(null,`${Date.now()}-${file.originalname}`)\r\n}\r\n})\r\nconst upload = multer({\r\n  storage:storage\r\n})\r\n\r\n\r\n//dashboard\r\nrouter.get(\"/profile\", verifyToken, getProfile);\r\nrouter.put('/editProfile', verifyToken, editProfile)\r\nrouter.put('/editpassword', verifyToken, editPassword)\r\nrouter.post(\"/enroll/:courseId\", verifyToken, enrollCourse);\r\nrouter.get('/showenroll', verifyToken, showEnrolled)\r\nrouter.post('/resources/:courseId', upload.single('file'),resourceController)\r\n\r\n// course completion \r\nrouter.post('/markvideoascomplete/:courseId/:videoId', verifyToken, markVideoAsComplete)\r\nrouter.get('/completedCourses', verifyToken, completedCourses)\r\n\r\n//Ranking and progress\r\nrouter.get(\"/ranking\", verifyToken, topRanks);\r\nrouter.get(\"/progress\", verifyToken, progressController);\r\nrouter.get('/courseprogress', verifyToken, courseProgress)\r\n\r\n//filter & sorting\r\nrouter.get('/filter', filter)\r\nrouter.get('/sorting', sorting)\r\n\r\n//Ratings\r\n\r\nrouter.post('/rate/:courseId/rate', verifyToken, ratingController)\r\n\r\nmodule.exports = router;\r\n"]}