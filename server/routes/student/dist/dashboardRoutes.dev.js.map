{"version":3,"sources":["dashboardRoutes.js"],"names":["express","require","verifyToken","getProfile","enrollCourse","topRanks","progressController","courseProgress","filter","sorting","markVideoAsComplete","completedCourses","editProfile","editPassword","showEnrolled","ratingController","askQuestion","topDiscussions","multer","router","Router","get","put","post","module","exports"],"mappings":";;AAAA,IAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,IAAMC,WAAW,GAAGD,OAAO,CAAC,4BAAD,CAA3B;;eAiBIA,OAAO,CAAC,kDAAD,C;IAfTE,U,YAAAA,U;IACAC,Y,YAAAA,Y;IACAC,Q,YAAAA,Q;IACAC,kB,YAAAA,kB;IACAC,c,YAAAA,c;IACAC,M,YAAAA,M;IACAC,O,YAAAA,O;IACAC,mB,YAAAA,mB;IACAC,gB,YAAAA,gB;IACAC,W,YAAAA,W;IACAC,Y,YAAAA,Y;IACAC,Y,YAAAA,Y;IACAC,gB,YAAAA,gB;IACAC,W,YAAAA,W;IACAC,c,YAAAA,c;;AAEF,IAAMC,MAAM,GAAGjB,OAAO,CAAC,QAAD,CAAtB;;AACA,IAAMkB,MAAM,GAAGnB,OAAO,CAACoB,MAAR,EAAf,C,CAEA;;AACAD,MAAM,CAACE,GAAP,CAAW,UAAX,EAAuBnB,WAAvB,EAAoCC,UAApC;AACAgB,MAAM,CAACG,GAAP,CAAW,cAAX,EAA2BpB,WAA3B,EAAwCU,WAAxC;AACAO,MAAM,CAACG,GAAP,CAAW,eAAX,EAA4BpB,WAA5B,EAAyCW,YAAzC;AACAM,MAAM,CAACI,IAAP,CAAY,mBAAZ,EAAiCrB,WAAjC,EAA8CE,YAA9C;AACAe,MAAM,CAACE,GAAP,CAAW,aAAX,EAA0BnB,WAA1B,EAAuCY,YAAvC,E,CAEA;;AACAK,MAAM,CAACI,IAAP,CAAY,yCAAZ,EAAuDrB,WAAvD,EAAoEQ,mBAApE;AACAS,MAAM,CAACE,GAAP,CAAW,mBAAX,EAAgCnB,WAAhC,EAA6CS,gBAA7C,E,CAEA;;AACAQ,MAAM,CAACE,GAAP,CAAW,UAAX,EAAuBnB,WAAvB,EAAoCG,QAApC;AACAc,MAAM,CAACE,GAAP,CAAW,WAAX,EAAwBnB,WAAxB,EAAqCI,kBAArC;AACAa,MAAM,CAACE,GAAP,CAAW,iBAAX,EAA8BnB,WAA9B,EAA2CK,cAA3C,E,CAEA;;AACAY,MAAM,CAACE,GAAP,CAAW,SAAX,EAAsBb,MAAtB;AACAW,MAAM,CAACE,GAAP,CAAW,UAAX,EAAuBZ,OAAvB,E,CAEA;;AACAU,MAAM,CAACI,IAAP,CAAY,sBAAZ,EAAoCrB,WAApC,EAAiDa,gBAAjD,E,CAEA;;AACAI,MAAM,CAACI,IAAP,CAAY,yBAAZ,EAAuCrB,WAAvC,EAAoDc,WAApD;AACAG,MAAM,CAACE,GAAP,CAAW,gCAAX,EAA6CnB,WAA7C,EAAyDe,cAAzD;AACAO,MAAM,CAACC,OAAP,GAAiBN,MAAjB","sourcesContent":["const express = require(\"express\");\r\nconst verifyToken = require(\"../../utils/verifyToken.js\");\r\nconst {\r\n  getProfile,\r\n  enrollCourse,\r\n  topRanks,\r\n  progressController,\r\n  courseProgress,\r\n  filter,\r\n  sorting,\r\n  markVideoAsComplete,\r\n  completedCourses,\r\n  editProfile,\r\n  editPassword,\r\n  showEnrolled,\r\n  ratingController,\r\n  askQuestion,\r\n  topDiscussions\r\n} = require('../../controllers/student/dashboardcontroller.js');\r\nconst multer = require(\"multer\");\r\nconst router = express.Router();\r\n\r\n//dashboard\r\nrouter.get(\"/profile\", verifyToken, getProfile);\r\nrouter.put('/editProfile', verifyToken, editProfile)\r\nrouter.put('/editpassword', verifyToken, editPassword)\r\nrouter.post(\"/enroll/:courseId\", verifyToken, enrollCourse);\r\nrouter.get('/showenroll', verifyToken, showEnrolled)\r\n\r\n// course completion \r\nrouter.post('/markvideoascomplete/:courseId/:videoId', verifyToken, markVideoAsComplete)\r\nrouter.get('/completedCourses', verifyToken, completedCourses)\r\n\r\n//Ranking and progress\r\nrouter.get(\"/ranking\", verifyToken, topRanks);\r\nrouter.get(\"/progress\", verifyToken, progressController);\r\nrouter.get('/courseprogress', verifyToken, courseProgress)\r\n\r\n//filter & sorting\r\nrouter.get('/filter', filter)\r\nrouter.get('/sorting', sorting)\r\n\r\n//Ratings\r\nrouter.post('/rate/:courseId/rate', verifyToken, ratingController)\r\n\r\n//Ask question\r\nrouter.post('/ask/:courseId/:videoId', verifyToken, askQuestion)\r\nrouter.get('/topDiscuss/:courseId/:videoId', verifyToken,topDiscussions)\r\nmodule.exports = router;\r\n"],"file":"dashboardRoutes.dev.js"}