{"version":3,"sources":["dashboardRoutes.js"],"names":["express","require","verifyToken","getProfile","enrollCourse","topRanks","progressController","courseProgress","filter","sorting","resourceController","markVideoAsComplete","completedCourses","editProfile","editPassword","showEnrolled","ratingController","askQuestion","topDiscussions","multer","router","Router","storage","diskStorage","destination","req","file","cb","filename","Date","now","originalname","upload","get","put","post","single","module","exports"],"mappings":";;AAAA,IAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,IAAMC,WAAW,GAAGD,OAAO,CAAC,4BAAD,CAA3B;;eAkBIA,OAAO,CAAC,kDAAD,C;IAhBTE,U,YAAAA,U;IACAC,Y,YAAAA,Y;IACAC,Q,YAAAA,Q;IACAC,kB,YAAAA,kB;IACAC,c,YAAAA,c;IACAC,M,YAAAA,M;IACAC,O,YAAAA,O;IACAC,kB,YAAAA,kB;IACAC,mB,YAAAA,mB;IACAC,gB,YAAAA,gB;IACAC,W,YAAAA,W;IACAC,Y,YAAAA,Y;IACAC,Y,YAAAA,Y;IACAC,gB,YAAAA,gB;IACAC,W,YAAAA,W;IACAC,c,YAAAA,c;;AAEF,IAAMC,MAAM,GAAGlB,OAAO,CAAC,QAAD,CAAtB;;AACA,IAAMmB,MAAM,GAAGpB,OAAO,CAACqB,MAAR,EAAf,C,CAIA;;AAEA,IAAMC,OAAO,GAAGH,MAAM,CAACI,WAAP,CAAmB;AACjCC,EAAAA,WAAW,EAAC,qBAACC,GAAD,EAAKC,IAAL,EAAUC,EAAV,EAAe;AACzBA,IAAAA,EAAE,CAAC,IAAD,EAAO,WAAP,CAAF;AACD,GAHgC;AAIjCC,EAAAA,QAAQ,EAAC,kBAACH,GAAD,EAAKC,IAAL,EAAUC,EAAV,EAAe;AACtBA,IAAAA,EAAE,CAAC,IAAD,YAASE,IAAI,CAACC,GAAL,EAAT,cAAuBJ,IAAI,CAACK,YAA5B,EAAF;AACH;AANkC,CAAnB,CAAhB;AAQA,IAAMC,MAAM,GAAGb,MAAM,CAAC;AACpBG,EAAAA,OAAO,EAACA;AADY,CAAD,CAArB,C,CAKA;;AACAF,MAAM,CAACa,GAAP,CAAW,UAAX,EAAuB/B,WAAvB,EAAoCC,UAApC;AACAiB,MAAM,CAACc,GAAP,CAAW,cAAX,EAA2BhC,WAA3B,EAAwCW,WAAxC;AACAO,MAAM,CAACc,GAAP,CAAW,eAAX,EAA4BhC,WAA5B,EAAyCY,YAAzC;AACAM,MAAM,CAACe,IAAP,CAAY,mBAAZ,EAAiCjC,WAAjC,EAA8CE,YAA9C;AACAgB,MAAM,CAACa,GAAP,CAAW,aAAX,EAA0B/B,WAA1B,EAAuCa,YAAvC;AACAK,MAAM,CAACe,IAAP,CAAY,sBAAZ,EAAoCH,MAAM,CAACI,MAAP,CAAc,MAAd,CAApC,EAA0D1B,kBAA1D,E,CAEA;;AACAU,MAAM,CAACe,IAAP,CAAY,yCAAZ,EAAuDjC,WAAvD,EAAoES,mBAApE;AACAS,MAAM,CAACa,GAAP,CAAW,mBAAX,EAAgC/B,WAAhC,EAA6CU,gBAA7C,E,CAEA;;AACAQ,MAAM,CAACa,GAAP,CAAW,UAAX,EAAuB/B,WAAvB,EAAoCG,QAApC;AACAe,MAAM,CAACa,GAAP,CAAW,WAAX,EAAwB/B,WAAxB,EAAqCI,kBAArC;AACAc,MAAM,CAACa,GAAP,CAAW,iBAAX,EAA8B/B,WAA9B,EAA2CK,cAA3C,E,CAEA;;AACAa,MAAM,CAACa,GAAP,CAAW,SAAX,EAAsBzB,MAAtB;AACAY,MAAM,CAACa,GAAP,CAAW,UAAX,EAAuBxB,OAAvB,E,CAEA;;AACAW,MAAM,CAACe,IAAP,CAAY,sBAAZ,EAAoCjC,WAApC,EAAiDc,gBAAjD,E,CAIA;;AACAI,MAAM,CAACe,IAAP,CAAY,yBAAZ,EAAuCjC,WAAvC,EAAoDe,WAApD;AACAG,MAAM,CAACa,GAAP,CAAW,gCAAX,EAA6C/B,WAA7C,EAAyDgB,cAAzD;AACAmB,MAAM,CAACC,OAAP,GAAiBlB,MAAjB","sourcesContent":["const express = require(\"express\");\r\nconst verifyToken = require(\"../../utils/verifyToken.js\");\r\nconst {\r\n  getProfile,\r\n  enrollCourse,\r\n  topRanks,\r\n  progressController,\r\n  courseProgress,\r\n  filter,\r\n  sorting,\r\n  resourceController,\r\n  markVideoAsComplete,\r\n  completedCourses,\r\n  editProfile,\r\n  editPassword,\r\n  showEnrolled,\r\n  ratingController,\r\n  askQuestion,\r\n  topDiscussions\r\n} = require('../../controllers/student/dashboardcontroller.js');\r\nconst multer = require(\"multer\");\r\nconst router = express.Router();\r\n\r\n\r\n\r\n//Multer to upload resources\r\n\r\nconst storage = multer.diskStorage({\r\n  destination:(req,file,cb)=>{\r\n    cb(null, 'resources')\r\n  },\r\n  filename:(req,file,cb)=>{\r\n    cb(null,`${Date.now()}-${file.originalname}`)\r\n}\r\n})\r\nconst upload = multer({\r\n  storage:storage\r\n})\r\n\r\n\r\n//dashboard\r\nrouter.get(\"/profile\", verifyToken, getProfile);\r\nrouter.put('/editProfile', verifyToken, editProfile)\r\nrouter.put('/editpassword', verifyToken, editPassword)\r\nrouter.post(\"/enroll/:courseId\", verifyToken, enrollCourse);\r\nrouter.get('/showenroll', verifyToken, showEnrolled)\r\nrouter.post('/resources/:courseId', upload.single('file'),resourceController)\r\n\r\n// course completion \r\nrouter.post('/markvideoascomplete/:courseId/:videoId', verifyToken, markVideoAsComplete)\r\nrouter.get('/completedCourses', verifyToken, completedCourses)\r\n\r\n//Ranking and progress\r\nrouter.get(\"/ranking\", verifyToken, topRanks);\r\nrouter.get(\"/progress\", verifyToken, progressController);\r\nrouter.get('/courseprogress', verifyToken, courseProgress)\r\n\r\n//filter & sorting\r\nrouter.get('/filter', filter)\r\nrouter.get('/sorting', sorting)\r\n\r\n//Ratings\r\nrouter.post('/rate/:courseId/rate', verifyToken, ratingController)\r\n\r\n\r\n\r\n//Ask question\r\nrouter.post('/ask/:courseId/:videoId', verifyToken, askQuestion)\r\nrouter.get('/topDiscuss/:courseId/:videoId', verifyToken,topDiscussions)\r\nmodule.exports = router;\r\n"],"file":"dashboardRoutes.dev.js"}