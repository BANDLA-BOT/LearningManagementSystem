{"version":3,"sources":["instructorTokenVerify.js"],"names":["jwt","require","validate","req","res","next","token","headers","authorization","split","status","json","error","verify","process","env","JWT_SECRET_KEY_INSTRUCTOR","err","decoded","user","module","exports"],"mappings":";;AAAA,IAAMA,GAAG,GAAGC,OAAO,CAAC,cAAD,CAAnB;;AACA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAOC,GAAP,EAAYC,GAAZ,EAAiBC,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AACTC,UAAAA,KADS,GAEbH,GAAG,CAACI,OAAJ,CAAYC,aAAZ,IAA6BL,GAAG,CAACI,OAAJ,CAAYC,aAAZ,CAA0BC,KAA1B,CAAgC,GAAhC,EAAqC,CAArC,CAFhB;;AAAA,cAGVH,KAHU;AAAA;AAAA;AAAA;;AAAA,2CAINF,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,YAAAA,KAAK,EAAE;AAAT,WAArB,CAJM;;AAAA;AAMfZ,UAAAA,GAAG,CAACa,MAAJ,CAAWP,KAAX,EAAkBQ,OAAO,CAACC,GAAR,CAAYC,yBAA9B,EAAyD,UAACC,GAAD,EAAMC,OAAN,EAAkB;AACzE,gBAAID,GAAJ,EAAS;AACP,qBAAOb,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,gBAAAA,KAAK,EAAE;AAAT,eAArB,CAAP;AACD;;AACDT,YAAAA,GAAG,CAACgB,IAAJ,GAAWD,OAAX;AACAb,YAAAA,IAAI;AACL,WAND;;AANe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAjB;;AAcAe,MAAM,CAACC,OAAP,GAAiBnB,QAAjB","sourcesContent":["const jwt = require(\"jsonwebtoken\");\r\nconst validate = async (req, res, next) => {\r\n  const token =\r\n    req.headers.authorization && req.headers.authorization.split(\" \")[1];\r\n  if (!token) {\r\n    return res.status(401).json({ error: \"Unauthorized\" });\r\n  }\r\n  jwt.verify(token, process.env.JWT_SECRET_KEY_INSTRUCTOR, (err, decoded) => {\r\n    if (err) {\r\n      return res.status(401).json({ error: \"Unauthorized\" });\r\n    }\r\n    req.user = decoded;\r\n    next();\r\n  });\r\n};\r\nmodule.exports = validate;"],"file":"instructorTokenVerify.dev.js"}