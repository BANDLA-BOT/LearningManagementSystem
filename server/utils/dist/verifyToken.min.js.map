{"version":3,"sources":["verifyToken.js"],"names":["jwt","require","validate","req","res","next","token","regeneratorRuntime","async","_context","prev","headers","authorization","split","abrupt","status","json","error","verify","process","env","JWT_SECRET_KEY","err","decoded","user","stop","module","exports"],"mappings":"aAAA,IAAMA,IAAMC,QAAQ,gBACdC,SAAW,SAAOC,EAAKC,EAAKC,GAAjB,IAAAC,EAAA,OAAAC,mBAAAC,MAAA,SAAAC,GAAA,OAAA,OAAAA,EAAAC,KAAAD,EAAAJ,MAAA,KAAA,EAAA,GADRC,EAGLH,EAAIQ,QAAQC,eAAiBT,EAAIQ,QAAQC,cAAcC,MAAM,KAAK,GAFrD,CAAAJ,EAAAJ,KAAA,EAAA,MAAA,OAAAI,EAAAK,OAAA,SAAAV,EAAAW,OAAA,KAAAC,KAAA,CAAAC,MAAA,kBAAA,KAAA,EAAAjB,IAAAkB,OAAAZ,EAAAa,QAAAC,IAAAC,eAAA,SAAAC,EAAAC,GAAA,GAAAD,EAAA,OAAAlB,EAAAW,OAAA,KAAAC,KAAA,CAAAC,MAAA,iBAUbd,EAAIqB,KAAOD,EAVElB,MAAA,KAAA,EAAA,IAAA,MAAA,OAAAI,EAAAgB,WAAAC,OAAAC,QAAAzB","file":"verifyToken.min.js","sourcesContent":["const jwt = require(\"jsonwebtoken\");\r\nconst validate = async (req, res, next) => {\r\n  const token =\r\n    req.headers.authorization && req.headers.authorization.split(\" \")[1];\r\n  if (!token) {\r\n    return res.status(401).json({ error: \"Unauthorized\" });\r\n  }\r\n  jwt.verify(token, process.env.JWT_SECRET_KEY, (err, decoded) => {\r\n    if (err) {\r\n      return res.status(401).json({ error: \"Unauthorized\" });\r\n    }\r\n    req.user = decoded;\r\n    next();\r\n  });\r\n};\r\nmodule.exports = validate;\r\n"]}