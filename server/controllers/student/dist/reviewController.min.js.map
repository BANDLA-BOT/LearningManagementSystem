{"version":3,"sources":["reviewController.js"],"names":["courseModel","require","studentModel","reviewController","req","res","courseId","userId","review","course","student","regeneratorRuntime","async","_context","prev","next","params","user","body","awrap","findById","sent","_id","id","abrupt","status","json","message","save","t0","stop","deleteReview","_req$params","reviewId","reviews","reviewDelete","_context3","map","item","_context2","toString","deleteOne","module","exports"],"mappings":"aAAA,IAAMA,YAAcC,QAAQ,mCACtBC,aAAeD,QAAQ,sCAEvBE,iBAAmB,SAAOC,EAAKC,GAAZ,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAC,mBAAAC,MAAA,SAAAC,GAAA,OAAA,OAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAAA,OAFnBb,EAAeD,EAAQe,OAAvBd,SAIEK,EAASH,EAAIa,KAFfd,EAAgBC,EAAGc,KAAnBf,OAAmBU,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAAAJ,mBAAAQ,MAAAnB,YAAAoB,SAAAd,IAAA,KAAA,EAAA,OAAAG,EAAAI,EAAAQ,KAAAR,EAAAE,KAAA,EAAAJ,mBAAAQ,MAAAjB,aAAAkB,SAAA,CAAAE,IAAAf,EAAAgB,MAAA,KAAA,EAAA,GAAAb,EAAAG,EAAAQ,KAAAZ,GAAAC,EAAA,CAAAG,EAAAE,KAAA,GAAA,MAAA,OAAAF,EAAAW,OAAA,SAAAnB,EAAAoB,OAAA,KAAAC,KAAA,CAAAC,QAAA,sBAAA,KAAA,GAAA,OAEjBpB,EAAAA,QAASH,KAAIa,CACXT,SAHe,CAAAD,OAAAG,EAAAY,IAAAd,OAAAA,KAAAK,EAAAE,KAAA,GAAAJ,mBAAAQ,MAAAV,EAAAmB,QAAA,KAAA,GAKfnB,EAAAA,OAAAA,KALeiB,KAAA,CAAAC,QAAA,8BAAAd,EAAAE,KAAA,GAAA,MAAA,KAAA,GAAAF,EAAAC,KAAA,GAAAD,EAAAgB,GAAAhB,EAAA,MAAA,GAAAR,EAAAoB,OAAA,KAAAC,KAAA,CAAAC,QAAAd,EAAAgB,GAMC3B,UAND,KAAA,GAAA,IAAA,MAAA,OAAAW,EAAAiB,SAAA,KAAA,KAAA,CAAA,CAAA,EAAA,OAsBnBC,aAAe,SAAO3B,EAAKC,GAAZ,IAAA2B,EAAA1B,EAAA2B,EAAAxB,EAAAyB,EAAAC,EAAA,OAAAxB,mBAAAC,MAAA,SAAAwB,GAAA,OAAA,OAAAA,EAAAtB,KAAAsB,EAAArB,MAAA,KAAA,EAAA,OAAAqB,EAAAtB,KAAA,EAAAkB,EAtBI5B,EAAAY,OAMfN,EAgBWsB,EAhBXtB,SANeuB,EAsBJD,EAtBIC,SAsBJG,EAAArB,KAAA,EAAAJ,mBAAAQ,MAGInB,YAAYoB,SAASd,IAHzB,KAAA,EAAA,OAGXG,EAHW2B,EAAAf,KAtBIa,EAOhBzB,EAAUyB,QAPMC,EAAAD,EAAAG,IAAA,SAAAC,GAAA,OAAA3B,mBAAAC,MAAA,SAAA2B,GAAA,OAAA,OAAAA,EAAAzB,KAAAyB,EAAAxB,MAAA,KAAA,EAAA,GAAAuB,EAAAhB,IAAAkB,aAAAP,EAAA,OAAAM,EAAAxB,KAAA,EAAAJ,mBAAAQ,MAAAmB,EAAAG,UAAA,CAAAR,SAAAA,KAAAM,EAAAxB,KAAA,EAAA,MAAA,KAAA,EAAA,IAAA,MAAA,OAAAwB,EAAAT,YAsBJM,EAAArB,KAAA,EAAAJ,mBAAAQ,MAdeQ,EAAAA,QAcf,KAAA,EAYjBtB,EAAIqB,KAAKS,GAZQC,EAAArB,KAAA,GAAA,MAAA,KAAA,GAAAqB,EAAAtB,KAAA,GAAAsB,EAAAP,GAAAO,EAAA,MAAA,GAZjB3B,EAAAA,KAAAA,EAAAA,GAAOyB,SAYU,KAAA,GAAA,IAAA,MAAA,OAAAE,EAAAN,SAAA,KAAA,KAAA,CAAA,CAAA,EAAA,OAXLY,OAAAC,QAAA,CAAAxC,iBAAAA","file":"reviewController.min.js","sourcesContent":["const courseModel = require(\"../../models/course/courseModel\");\r\nconst studentModel = require(\"../../models/users/studentModel.js\");\r\n\r\nconst reviewController = async (req, res) => {\r\n  const { courseId } = req.params;\r\n  const userId = req.user;\r\n  const { review } = req.body;\r\n  try {\r\n    const course = await courseModel.findById(courseId);\r\n    const student = await studentModel.findById({ _id: userId.id });\r\n    if (!course || !student) {\r\n      return res.status(404).json({ message: \"Course not found\" });\r\n    }\r\n    course.reviews.push({\r\n      reviewBy: {\r\n        userId: student._id,\r\n        review,\r\n      },\r\n    });\r\n    await course.save();\r\n    res.status(201).json({ message: \"Review added successfully\" });\r\n  } catch (error) {\r\n    res.status(500).json({ message: error.message });\r\n  }\r\n};\r\nconst deleteReview = async (req, res) => {\r\n  try {\r\n    const { courseId, reviewId } = req.params;\r\n    const course = await courseModel.findById(courseId);\r\n    const reviews = course.reviews;\r\n    const reviewDelete = reviews.map(async (item) => {\r\n      if (item._id.toString() === reviewId) {\r\n        await item.deleteOne({ reviewId });\r\n      }\r\n    });\r\n    await course.save();\r\n\r\n    res.json(reviewDelete);\r\n  } catch (error) {\r\n    res.json(error.message);\r\n  }\r\n};\r\n\r\nmodule.exports = { reviewController};\r\n"]}