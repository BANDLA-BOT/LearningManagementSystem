{"version":3,"sources":["CreateCourseController.js"],"names":["CourseModel","require","multer","path","storage","diskStorage","destination","req","file","cb","filename","Date","now","extname","originalname","upload","exports","fields","name","maxCount","createCourse","res","body","title","price","rating","reviews","resources","description","instructor","section","newCourse","save","json","message","Course","status","Error","addVideos","videos","files","thumbnail","sections","JSON","parse","uploadVideos","map","sec","index","secVideos","video","filter","vid","videoIndex","videoFile","error","module"],"mappings":";;AAAA,IAAMA,WAAW,GAAGC,OAAO,CAAC,oCAAD,CAA3B;;AACA,IAAMC,MAAM,GAAGD,OAAO,CAAC,QAAD,CAAtB;;AACA,IAAME,IAAI,GAAGF,OAAO,CAAC,MAAD,CAApB,C,CAGA;;;AAEA,IAAMG,OAAO,GAAGF,MAAM,CAACG,WAAP,CAAmB;AAC/BC,EAAAA,WAAW,EAAC,qBAACC,GAAD,EAAKC,IAAL,EAAWC,EAAX,EAAgB;AACxBA,IAAAA,EAAE,CAAC,IAAD,EAAO,SAAP,CAAF;AACH,GAH8B;AAI/BC,EAAAA,QAAQ,EAAC,kBAACH,GAAD,EAAKC,IAAL,EAAWC,EAAX,EAAgB;AACrBA,IAAAA,EAAE,CAAC,IAAD,EAAOE,IAAI,CAACC,GAAL,KAAaT,IAAI,CAACU,OAAL,CAAaL,IAAI,CAACM,YAAlB,CAApB,CAAF;AACH;AAN8B,CAAnB,CAAhB;AAQA,IAAMC,MAAM,GAAGb,MAAM,CAAC;AAACE,EAAAA,OAAO,EAACA;AAAT,CAAD,CAArB;AAEAY,OAAO,CAACD,MAAR,GAAiBA,MAAM,CAACE,MAAP,CAAc,CAC3B;AAACC,EAAAA,IAAI,EAAC,YAAN;AAAoBC,EAAAA,QAAQ,EAAC;AAA7B,CAD2B,EAE3B;AAACD,EAAAA,IAAI,EAAC,WAAN;AAAmBC,EAAAA,QAAQ,EAAC;AAA5B,CAF2B,CAAd,CAAjB;;AAKA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAAOb,GAAP,EAAWc,GAAX;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAEwEd,GAAG,CAACe,IAF5E,EAENC,KAFM,aAENA,KAFM,EAECC,KAFD,aAECA,KAFD,EAEQC,MAFR,aAEQA,MAFR,EAEgBC,OAFhB,aAEgBA,OAFhB,EAEyBC,SAFzB,aAEyBA,SAFzB,EAEoCC,WAFpC,aAEoCA,WAFpC,EAEiDC,UAFjD,aAEiDA,UAFjD,EAE6DC,QAF7D,aAE6DA,OAF7D;AAGPC,UAAAA,SAHO,GAGK,IAAI/B,WAAJ,CAAgB;AAC9BuB,YAAAA,KAAK,EAALA,KAD8B;AAE9BC,YAAAA,KAAK,EAALA,KAF8B;AAG9BC,YAAAA,MAAM,EAANA,MAH8B;AAI9BC,YAAAA,OAAO,EAAPA,OAJ8B;AAK9BE,YAAAA,WAAW,EAAXA,WAL8B;AAM9BC,YAAAA,UAAU,EAAVA,UAN8B;AAO9BF,YAAAA,SAAS,EAATA,SAP8B;AAQ9BG,YAAAA,OAAO,EAAPA;AAR8B,WAAhB,CAHL;AAAA;AAAA,0CAaPC,SAAS,CAACC,IAAV,EAbO;;AAAA;AAcbX,UAAAA,GAAG,CAACY,IAAJ,CAAS;AAACC,YAAAA,OAAO,EAAC,6BAAT;AAAwCC,YAAAA,MAAM,EAACJ;AAA/C,WAAT;AAda;AAAA;;AAAA;AAAA;AAAA;AAgBbV,UAAAA,GAAG,CAACe,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;AAACC,YAAAA,OAAO,EAAC,uBAAT;AAAkCG,YAAAA,KAAK,EAAC,YAAMH;AAA9C,WAArB;;AAhBa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAArB;;AAoBA,IAAMI,SAAS,GAAG,SAAZA,SAAY,CAAM/B,GAAN,EAAUc,GAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACf,cAAI;AACGkB,YAAAA,MADH,GACYhC,GAAG,CAACiC,KAAJ,CAAU,WAAV,KAA0B,EADtC;AAEGC,YAAAA,SAFH,GAEelC,GAAG,CAACiC,KAAJ,CAAU,WAAV,KAA0B,EAFzC;AAGGE,YAAAA,QAHH,GAGcC,IAAI,CAACC,KAAL,CAAWd,OAAX,CAHd;AAKGe,YAAAA,YALH,GAKkBH,QAAQ,CAACI,GAAT,CAAa,UAACC,GAAD,EAAMC,KAAN,EAAc;AAC5C,kBAAMC,SAAS,GAAGC,KAAK,CAACC,MAAN,CAAa,UAAAC,GAAG;AAAA,uBAAIA,GAAG,CAAC1C,QAAJ,uBAA4BsC,KAA5B,YAAJ;AAAA,eAAhB,EAAgEF,GAAhE,CAAoE,UAACI,KAAD,EAAQG,UAAR;AAAA,uBAAsB;AACxG9B,kBAAAA,KAAK,EAAC2B,KAAK,CAACpC,YAD4F;AAExG2B,kBAAAA,SAAS,EAACA,SAAS,CAACY,UAAD,CAAT,qBAAmCZ,SAAS,CAACY,UAAD,CAAT,CAAsB3C,QAAzD,IAAoE,EAF0B;AAGxG4C,kBAAAA,SAAS,oBAAaJ,KAAK,CAACxC,QAAnB;AAH+F,iBAAtB;AAAA,eAApE,CAAlB;AAKH,aANoB,CALlB;AAYH,WAZD,CAYE,OAAO6C,KAAP,EAAc,CAEf;;AAfc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAlB;;AAmBAC,MAAM,CAACxC,OAAP,GAAiB;AAACI,EAAAA,YAAY,EAAZA,YAAD;AAAckB,EAAAA,SAAS,EAATA;AAAd,CAAjB","sourcesContent":["const CourseModel = require('../../models/course/courseModel.js')\r\nconst multer = require('multer')\r\nconst path = require('path')\r\n\r\n\r\n//multer \r\n\r\nconst storage = multer.diskStorage({\r\n    destination:(req,file, cb)=>{\r\n        cb(null, 'videos/')\r\n    },\r\n    filename:(req,file, cb)=>{\r\n        cb(null, Date.now() + path.extname(file.originalname))\r\n    }\r\n})\r\nconst upload = multer({storage:storage})\r\n\r\nexports.upload = upload.fields([\r\n    {name:'videosFile', maxCount:1},\r\n    {name:\"thumbnail\", maxCount:1}\r\n]);\r\n\r\nconst createCourse = async (req,res)=>{\r\n    try {\r\n        const {title, price, rating, reviews, resources, description, instructor, section} = req.body\r\n        const newCourse = new CourseModel({\r\n            title,\r\n            price,\r\n            rating,\r\n            reviews,\r\n            description,\r\n            instructor,\r\n            resources,\r\n            section,\r\n        })\r\n        await newCourse.save()\r\n        res.json({message:\"Course created successfully\", Course:newCourse})\r\n    } catch (error) {\r\n        res.status(500).json({message:\"Internal server error\", Error:error.message})\r\n    }\r\n}\r\n\r\nconst addVideos = async(req,res)=>{\r\n   try {\r\n    const videos = req.files['videoFile'] || []\r\n    const thumbnail = req.files['thumbnail'] || []\r\n    const sections = JSON.parse(section)\r\n\r\n    const uploadVideos = sections.map((sec, index)=>{\r\n        const secVideos = video.filter(vid => vid.filename === `section[${index}].video`).map((video, videoIndex)=>({\r\n            title:video.originalname,\r\n            thumbnail:thumbnail[videoIndex] ? `/videos/${thumbnail[videoIndex].filename}`:'',\r\n            videoFile: `/videos/${video.filename}`\r\n        }))\r\n    })\r\n   } catch (error) {\r\n    \r\n   }\r\n}\r\n\r\n\r\nmodule.exports = {createCourse,addVideos}"],"file":"CreateCourseController.dev.js"}