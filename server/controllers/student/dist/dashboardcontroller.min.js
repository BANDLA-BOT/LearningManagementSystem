"use strict";var Student=require("../../models/users/studentModel.js"),courseModel=require("../../models/course/courseModel.js"),adminModel=require("../../models/users/adminModel.js"),getProfile=function(r,t){var s,n,a;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return s=r.user,e.prev=1,e.next=4,regeneratorRuntime.awrap(Student.findById({_id:s.id}).select("-password"));case 4:return n=e.sent,e.next=7,regeneratorRuntime.awrap(courseModel.find().limit(61));case 7:if(a=e.sent,n){e.next=10;break}return e.abrupt("return",t.json({message:"No student found "}));case 10:if(a){e.next=12;break}return e.abrupt("return",t.json({message:"No courses available currently"}));case 12:t.json({message:"Students Profile",Profile:n,courses:a,porfileStatus:!0}),e.next=18;break;case 15:e.prev=15,e.t0=e.catch(1),t.status(500).json({Message:"Internal server error",Error:e.t0.message});case 18:case"end":return e.stop()}},null,null,[[1,15]])},editProfile=function(r,t){var s,n,a,o,u;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,s=r.body,n=s.email,a=s.firstname,o=s.lastname,u=r.user.id,e.next=5,regeneratorRuntime.awrap(Student.updateOne({_id:u},{$set:{firstname:a,lastname:o,email:n}}));case 5:e.sent,t.status(200).json({message:"Profile updated successfuly"}),e.next=12;break;case 9:e.prev=9,e.t0=e.catch(0),t.status(500).json({message:"Internal server error",Error:e.t0.message});case 12:case"end":return e.stop()}},null,null,[[0,9]])},editPassword=function(r,t){var s,n,a,o,u,c;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,s=r.user.id,n=r.body,a=n.currentPassword,o=n.newPassword,u=n.reEnterNewPassword,e.next=5,regeneratorRuntime.awrap(Student.findById(s));case 5:if(c=e.sent,a!==c.password)return e.abrupt("return",t.json({message:"You have entered wrong current password"}));e.next=8;break;case 8:if(o===c.password)return e.abrupt("return",t.json({message:"New password should be different from Old password"}));e.next=10;break;case 10:if(o!==u)return e.abrupt("return",t.json({message:"Confirm password should same as New password"}));e.next=12;break;case 12:return c.password=o,e.next=15,regeneratorRuntime.awrap(c.save());case 15:t.json({message:"Password changed successfully"}),e.next=21;break;case 18:e.prev=18,e.t0=e.catch(0),t.status(500).json({message:"Internal server error",Error:e.t0.message});case 21:case"end":return e.stop()}},null,null,[[0,18]])},enrollCourse=function(r,t){var s,n,a,o,u,c;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return s=r.params.courseId,n=r.user,e.next=4,regeneratorRuntime.awrap(courseModel.findById({_id:s}));case 4:return a=e.sent,e.next=7,regeneratorRuntime.awrap(adminModel.findOne());case 7:return o=e.sent,e.next=10,regeneratorRuntime.awrap(Student.findById({_id:n.id}));case 10:if(u=e.sent,e.prev=11,u){e.next=14;break}return e.abrupt("return",t.status(400).json({message:"Student not found"}));case 14:if(a){e.next=16;break}return e.abrupt("return",t.status(400).json({message:"Course not found"}));case 16:if(c=u.enrolled,c.some(function(e){return e.coursesAvailable.equals(s)}))return e.abrupt("return",t.json({Message:"You have already enrolled this course"}));e.next=20;break;case 20:return o.courseRequests.push({courseId:a._id,studentId:u._id,paid:!0}),e.next=23,regeneratorRuntime.awrap(o.save());case 23:t.status(200).json({Message:"Request sent to the Admin, check your EnrolledList after now"}),e.next=29;break;case 26:e.prev=26,e.t0=e.catch(11),t.status(500).json({message:"Internal server error",Error:e.t0.message});case 29:case"end":return e.stop()}},null,null,[[11,26]])},showEnrolled=function(r,t){var s,n;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return s=r.user,e.prev=1,e.next=4,regeneratorRuntime.awrap(Student.findById({_id:s.id}).populate("enrolled.coursesAvailable"));case 4:if(n=e.sent){e.next=7;break}return e.abrupt("return",t.status(404).json({message:"Student not found"}));case 7:t.status(200).json({message:"Found",List:n.enrolled}),e.next=13;break;case 10:e.prev=10,e.t0=e.catch(1),t.status(500).json({message:"Internal server error",error:e.t0.message});case 13:case"end":return e.stop()}},null,null,[[1,10]])},topRanks=function(e,r){var t;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,regeneratorRuntime.awrap(Student.aggregate([{$match:{"enrolled.isComplete":!0}},{$addFields:{Count:{$size:{$filter:{input:"$enrolled",as:"enrolled",cond:{$eq:["$$enrolled.isComplete",!0]}}}}}},{$sort:{_id:-1}},{$project:{firstname:1,lastname:1,Count:1}}]));case 3:t=e.sent,r.status(200).json({rankings:t}),e.next=10;break;case 7:e.prev=7,e.t0=e.catch(0),r.status(500).json({message:"Internal server error"});case 10:case"end":return e.stop()}},null,null,[[0,7]])},markVideoAsComplete=function(r,t){var s,n,a,o,u,c,i,d,l,p,m;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,s=r.params,n=s.courseId,a=s.videoId,o=r.user.id,e.next=5,regeneratorRuntime.awrap(courseModel.findById(n));case 5:if(u=e.sent){e.next=8;break}return e.abrupt("return",t.status(404).json({message:"Course not found"}));case 8:return e.next=10,regeneratorRuntime.awrap(Student.findById(o).populate("enrolled.coursesAvailable"));case 10:if(c=e.sent){e.next=13;break}return e.abrupt("return",t.status(404).json({message:"Student not found"}));case 13:if(i=c.enrolled,console.log(i),d=c.enrolled.find(function(e){return e.coursesAvailable.equals(n)}),console.log(d),d){e.next=19;break}return e.abrupt("return",t.status(404).json({message:"Course not enrolled by the student"}));case 19:if(d.completedVideos.find(function(e){return e.courseId.equals(n)&&e.videos.includes(a)}))return e.abrupt("return",t.json({message:"Video already marked as complete"}));e.next=22;break;case 22:return(l=d.completedVideos.find(function(e){return e.courseId.equals(n)}))?l.videos.push(a):(l={courseId:n,videos:[a]},d.completedVideos.push(l)),e.next=26,regeneratorRuntime.awrap(c.save());case 26:p=u.section.reduce(function(e,r){return e+r.videos.length},0),m=l.videos.length,t.json({message:"Videos marked as complete",completedVideos:m,totalVideos:p,allCompleted:m===p}),e.next=34;break;case 31:e.prev=31,e.t0=e.catch(0),t.status(500).json({message:"Internal server error",error:e.t0.message});case 34:case"end":return e.stop()}},null,null,[[0,31]])},completedCourses=function(r,t){var s,n,a,o,u,c,i;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,s=r.params.courseId,n=r.user.id,e.next=5,regeneratorRuntime.awrap(Student.findById(n).populate("enrolled.coursesAvailable"));case 5:if(a=e.sent){e.next=8;break}return e.abrupt("return",t.status(404).json({message:"Student not found"}));case 8:if(o=a.enrolled.find(function(e){return e.coursesAvailable.equals(s)})){e.next=11;break}return e.abrupt("return",t.status(404).json({message:"Course not enrolled by the student"}));case 11:return u=o.completedVideos.find(function(e){return e.courseId.equals(s)})||{videos:[]},e.next=14,regeneratorRuntime.awrap(courseModel.findById(s));case 14:c=e.sent,i=c.sections.reduce(function(e,r){return e+r.videos.length},0),t.json({completedVideos:u.videos,totalVideos:i,allCompleted:u.videos.length===i}),e.next=22;break;case 19:e.prev=19,e.t0=e.catch(0),t.status(500).json({message:"Internal server error",error:e.t0.message});case 22:case"end":return e.stop()}},null,null,[[0,19]])},progressController=function(r,t){var s,n,a,o,u;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,s=r.user.id,e.next=4,regeneratorRuntime.awrap(Student.findById(s));case 4:if(n=e.sent){e.next=7;break}return e.abrupt("return",t.status(404).json({message:"Student not found"}));case 7:a=n.enrolled.length,o=n.enrolled.filter(function(e){return e.isComplete}).length,u={totalCourses:a,completedCourses:o,coursesPercentage:o/a*100},t.status(200).json({message:"Progress report",Progress:u}),e.next=17;break;case 14:e.prev=14,e.t0=e.catch(0),t.json({message:e.t0.message});case 17:case"end":return e.stop()}},null,null,[[0,14]])},courseProgress=function(r,t){var s,n,a;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,s=r.user.id,e.next=4,regeneratorRuntime.awrap(Student.findById(s).populate("enrolled"));case 4:if(n=e.sent){e.next=7;break}return e.abrupt("return",t.status(404).json({message:"Student not found"}));case 7:return e.next=9,regeneratorRuntime.awrap(Promise.all(n.enrolled.map(function(r){var t;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,regeneratorRuntime.awrap(courseModel.aggregate([{$match:{_id:r.coursesAvailable}},{$unwind:"$section"},{$unwind:"$section.videos"},{$group:{_id:null,totalVideos:{$sum:1},completedVideos:{$sum:{$cond:["$section.videos.completed",1,0]}}}},{$project:{_id:0,totalVideos:1,completedVideos:1,completedPercentage:{$cond:[{$eq:["$totalVideos",0]},0,{$multiply:[{$divide:["$completedVideos","$totalVideos"]},100]}]}}}]));case 2:return t=e.sent,e.abrupt("return",{course:r,progress:t[0]});case 4:case"end":return e.stop()}})})));case 9:a=e.sent,t.json(a),e.next=16;break;case 13:e.prev=13,e.t0=e.catch(0),t.status(500).json({message:"Internal server error",error:e.t0.message});case 16:case"end":return e.stop()}},null,null,[[0,13]])},filter=function(r,t){var s,n,a;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:if(e.prev=0,s=r.query.f,console.log(s),"paid"===s.toLowerCase())return e.next=6,regeneratorRuntime.awrap(courseModel.find().where("price").gt(0));e.next=10;break;case 6:return n=e.sent,e.abrupt("return",t.status(200).json({message:"Paid courses",paidCourses:n}));case 10:if("free"===s.toLowerCase())return e.next=13,regeneratorRuntime.awrap(courseModel.find().where("price").eq(0));e.next=15;break;case 13:return a=e.sent,e.abrupt("return",t.status(200).json({message:"free courses",freeCourses:a}));case 15:t.json({message:"No courses available based on Query"}),e.next=21;break;case 18:e.prev=18,e.t0=e.catch(0),t.status(500).json({message:"Internal server error",Error:e.t0.message});case 21:case"end":return e.stop()}},null,null,[[0,18]])},sorting=function(r,t){var s,n,a,o;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:if(e.prev=0,"asc"===(s=r.query.sort).toLowerCase())return e.next=5,regeneratorRuntime.awrap(courseModel.find().sort({title:1}));e.next=9;break;case 5:return n=e.sent,e.abrupt("return",t.json({message:"Ascending order",course:n}));case 9:if("desc"===s.toLowerCase())return e.next=12,regeneratorRuntime.awrap(courseModel.find().sort({title:-1}));e.next=16;break;case 12:return a=e.sent,e.abrupt("return",t.json({message:"Descending order",course:a}));case 16:if("rating"===s.toLowerCase())return e.next=19,regeneratorRuntime.awrap(courseModel.find().sort({rating:-1}));e.next=21;break;case 19:return o=e.sent,e.abrupt("return",t.json({message:"Rating order",course:o}));case 21:t.json({message:"No Sorting chosen"}),e.next=27;break;case 24:e.prev=24,e.t0=e.catch(0),t.status(500).json({message:"Internal server error",Error:e.t0.message});case 27:case"end":return e.stop()}},null,null,[[0,24]])},ratingController=function(r,t){var s,n,a,o;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:if(s=r.params.courseId,n=r.query.rating,a=r.user.id,console.log(a),!n||n<1||5<n)return e.abrupt("return",t.status(400).send("Invalid rating. Must be between 1 and 5"));e.next=6;break;case 6:return e.prev=6,e.next=9,regeneratorRuntime.awrap(courseModel.findById(s));case 9:if(o=e.sent){e.next=12;break}return e.abrupt("return",t.status(404).json("Course not found."));case 12:if(o.rating.find(function(e){return e.ratedBy.toString()===a}))return e.abrupt("return",t.status(400).json({message:"You have already rated this course"}));e.next=15;break;case 15:return o.rating.push({rate:Number(n),ratedBy:a}),e.next=18,regeneratorRuntime.awrap(o.save());case 18:t.json({message:"Thank you for rating the course"}),e.next=24;break;case 21:e.prev=21,e.t0=e.catch(6),t.status(500).json({message:"Internal server error",error:e.t0.message});case 24:case"end":return e.stop()}},null,null,[[6,21]])},askQuestion=function(r,t){var s,n,a,o,u,c;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return s=r.params,n=s.videoId,a=s.courseId,o=r.body.question,u=r.user.id,e.prev=3,e.next=6,regeneratorRuntime.awrap(courseModel.findById(a));case 6:return c=e.sent,c.discussions.push({videoId:n,courseId:a,askedBy:u,question:o}),e.next=11,regeneratorRuntime.awrap(c.save());case 11:t.json({message:"We have got your question, you will get answer back from our instructor"}),e.next=17;break;case 14:e.prev=14,e.t0=e.catch(3),t.status(500).json({message:"Internal server error",error:e.t0.message});case 17:case"end":return e.stop()}},null,null,[[3,14]])},topDiscussions=function(r,t){var s,n,a;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,s=r.params,n=s.courseId,s.videoId,e.next=4,regeneratorRuntime.awrap(courseModel.aggregate([{$match:{_id:n}}]));case 4:a=e.sent,console.log(a),e.next=11;break;case 8:e.prev=8,e.t0=e.catch(0),t.json({Message:"Internal server error",error:e.t0.message});case 11:case"end":return e.stop()}},null,null,[[0,8]])};module.exports={getProfile:getProfile,enrollCourse:enrollCourse,showEnrolled:showEnrolled,topRanks:topRanks,completedCourses:completedCourses,progressController:progressController,courseProgress:courseProgress,filter:filter,sorting:sorting,markVideoAsComplete:markVideoAsComplete,editProfile:editProfile,editPassword:editPassword,ratingController:ratingController,askQuestion:askQuestion,topDiscussions:topDiscussions};
//# sourceMappingURL=dashboardcontroller.min.js.map
