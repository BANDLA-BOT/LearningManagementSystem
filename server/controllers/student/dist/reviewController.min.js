"use strict";var courseModel=require("../../models/course/courseModel"),studentModel=require("../../models/users/studentModel.js"),reviewController=function(r,s){var t,n,a,u,o;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return t=r.params.courseId,n=r.user,a=r.body.review,e.prev=3,e.next=6,regeneratorRuntime.awrap(courseModel.findById(t));case 6:return u=e.sent,e.next=9,regeneratorRuntime.awrap(studentModel.findById({_id:n.id}));case 9:if(o=e.sent,u&&o){e.next=12;break}return e.abrupt("return",s.status(404).json({message:"Course not found"}));case 12:return u.reviews.push({reviewBy:{userId:o._id,review:a}}),e.next=15,regeneratorRuntime.awrap(u.save());case 15:s.status(201).json({message:"Review added successfully"}),e.next=21;break;case 18:e.prev=18,e.t0=e.catch(3),s.status(500).json({message:e.t0.message});case 21:case"end":return e.stop()}},null,null,[[3,18]])},deleteReview=function(r,s){var t,n,a,u;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,t=r.params,n=t.reviewedUserId,a=t.courseId,e.next=4,regeneratorRuntime.awrap(courseModel.findByIdAndUpdate(a,{$pull:{reviews:{"reviewBy.userId":n}}},{new:!0}));case 4:u=e.sent,s.json({message:"Review deleted successfully",deletedReview:u}),e.next=11;break;case 8:e.prev=8,e.t0=e.catch(0),s.status(500).json({message:"Internal server error",error:e.t0.message});case 11:case"end":return e.stop()}},null,null,[[0,8]])};module.exports={reviewController:reviewController,deleteReview:deleteReview};
//# sourceMappingURL=reviewController.min.js.map
