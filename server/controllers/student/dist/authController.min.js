"use strict";var Student=require("../../models/users/studentModel.js"),jwt=require("jsonwebtoken");require("dotenv").config();var register=function(r,s){var t,n,a,u,o,i;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,t=r.body,n=t.email,a=t.firstname,u=t.lastname,o=t.password,e.next=4,regeneratorRuntime.awrap(Student.findOne({email:n}));case 4:if(e.sent)return e.abrupt("return",s.json({message:"User already exists with the email ID"}));e.next=7;break;case 7:return i=new Student({email:n,firstname:a,lastname:u,password:o}),e.next=10,regeneratorRuntime.awrap(i.save());case 10:s.status(201).json({Message:"Student registered successfully",Student:i}),e.next=16;break;case 13:e.prev=13,e.t0=e.catch(0),s.status(500).json({Message:"Internal server error",Error:e.t0.message});case 16:case"end":return e.stop()}},null,null,[[0,13]])},login=function(r,s){var t,n,a,u,o;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,t=r.body,n=t.email,a=t.password,e.next=4,regeneratorRuntime.awrap(Student.findOne({email:n,password:a}));case 4:if(u=e.sent){e.next=7;break}return e.abrupt("return",s.json({message:"User doesn't exists"}));case 7:o=jwt.sign({id:u._id},process.env.JWT_SECRET_KEY,{expiresIn:"15d"}),s.status(200).json({message:"Student logged in successfully",student:u,Token:o}),e.next=14;break;case 11:e.prev=11,e.t0=e.catch(0),s.status(500).json({Message:"Internal server error",Error:e.t0.message});case 14:case"end":return e.stop()}},null,null,[[0,11]])};module.exports={register:register,login:login};
//# sourceMappingURL=authController.min.js.map
