"use strict";var Student=require("../../models/users/studentModel.js"),jwt=require("jsonwebtoken"),bcrypt=require("bcryptjs"),nodemailer=require("nodemailer"),register=function(r,t){var s,n,a,o,u,i,c;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,s=r.body,n=s.email,a=s.firstname,o=s.lastname,u=s.password,i="".concat(r.file.destination,"/").concat(r.file.filename),e.next=5,regeneratorRuntime.awrap(Student.findOne({email:n}));case 5:if(e.sent)return e.abrupt("return",t.json({message:"User already exists with the email ID"}));e.next=8;break;case 8:return c=new Student({email:n,firstname:a,lastname:o,password:u,profilepic:i}),e.next=11,regeneratorRuntime.awrap(c.save());case 11:t.status(201).json({Message:"Student registered successfully",Student:c}),e.next=17;break;case 14:e.prev=14,e.t0=e.catch(0),t.status(500).json({Message:"Internal server error",Error:e.t0.message});case 17:case"end":return e.stop()}},null,null,[[0,14]])},login=function(r,t){var s,n,a,o,u;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,s=r.body,n=s.email,a=s.password,e.next=4,regeneratorRuntime.awrap(Student.findOne({email:n,password:a}));case 4:if(o=e.sent){e.next=7;break}return e.abrupt("return",t.json({message:"User doesn't exists"}));case 7:if(a!==o.password)return e.abrupt("return",t.json({message:"Passwords did not match"}));e.next=9;break;case 9:u=jwt.sign({id:o._id},process.env.JWT_SECRET_KEY,{expiresIn:"15d"}),t.status(200).json({message:"Student logged in successfully",student:o,Token:u}),e.next=16;break;case 13:e.prev=13,e.t0=e.catch(0),t.status(500).json({Message:"Internal server error",Error:e.t0.message});case 16:case"end":return e.stop()}},null,null,[[0,13]])},otpStore=new Map,sendOtp=function(r,t){var s,n,a,o,u;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return s=r.body.email,e.prev=1,e.next=4,regeneratorRuntime.awrap(Student.findOne({email:s}));case 4:if(e.sent){e.next=7;break}return e.abrupt("return",t.status(404).json({message:"Student not found"}));case 7:n=Math.floor(1e5+9e5*Math.random()).toString(),a=Date.now()+3e5,otpStore.set(s,{otp:n,expires:a}),console.log(otpStore),o=nodemailer.createTransport({service:"gmail",auth:{user:process.env.EMAIL_USER,pass:process.env.EMAIL_PASS}}),u={from:process.env.EMAIL_USER,to:s,subject:"OTP for resetting Password",text:"Your OTP code is ".concat(n,". It will expire in 5 minutes.")},o.sendMail(u,function(e,r){if(e)return t.status(500).json({message:"Error sending email",error:e,info:r});t.json({message:"OTP sent"})}),e.next=19;break;case 16:e.prev=16,e.t0=e.catch(1),t.status(500).json({message:"Server error",error:e.t0});case 19:case"end":return e.stop()}},null,null,[[1,16]])},verifyOTP=function(r,t){var s,n,a,o;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:if(s=r.body,n=s.email,a=s.otp,o=otpStore.get(n),console.log(o),o){e.next=5;break}return e.abrupt("return",t.status(400).json({message:"No OTP found for this email"}));case 5:if(o.otp===a&&o.expires>Date.now())return e.abrupt("return",t.json({message:"OTP verified"}));e.next=9;break;case 9:return e.abrupt("return",t.status(400).json({message:"Invalid or expired OTP"}));case 10:case"end":return e.stop()}})},forgotPassword=function(r,t){var s,n,a,o;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return s=r.body,n=s.email,a=s.newPassword,e.prev=1,e.next=4,regeneratorRuntime.awrap(Student.findOne({email:n}));case 4:if(o=e.sent){e.next=7;break}return e.abrupt("return",t.status(404).json({message:"Student not found"}));case 7:if(otpStore.get(n)){e.next=10;break}return e.abrupt("return",t.status(400).json({message:"No OTP found for this email"}));case 10:return o.password=a,e.next=13,regeneratorRuntime.awrap(o.save());case 13:return otpStore.delete(n),e.abrupt("return",t.json({message:"Password changed successfully"}));case 17:e.prev=17,e.t0=e.catch(1),t.status(500).json({message:"Server error",error:e.t0});case 20:case"end":return e.stop()}},null,null,[[1,17]])};module.exports={register:register,login:login,sendOtp:sendOtp,forgotPassword:forgotPassword,verifyOTP:verifyOTP};
//# sourceMappingURL=authController.min.js.map
