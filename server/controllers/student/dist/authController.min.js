"use strict";var Student=require("../../models/users/studentModel.js"),jwt=require("jsonwebtoken"),bcrypt=require("bcryptjs"),nodemailer=require("nodemailer"),register=function(r,s){var t,n,a,o,i,u,c;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,t=r.body,n=t.email,a=t.firstname,o=t.lastname,i=t.password,u="".concat(r.file.destination,"/").concat(r.file.filename),e.next=5,regeneratorRuntime.awrap(Student.findOne({email:n}));case 5:if(e.sent)return e.abrupt("return",s.json({message:"User already exists with the email ID"}));e.next=8;break;case 8:return c=new Student({email:n,firstname:a,lastname:o,password:i,profilepic:u}),e.next=11,regeneratorRuntime.awrap(c.save());case 11:s.status(201).json({Message:"Student registered successfully",Student:c}),e.next=17;break;case 14:e.prev=14,e.t0=e.catch(0),s.status(500).json({Message:"Internal server error",Error:e.t0.message});case 17:case"end":return e.stop()}},null,null,[[0,14]])},login=function(r,s){var t,n,a,o,i;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,t=r.body,n=t.email,a=t.password,e.next=4,regeneratorRuntime.awrap(Student.findOne({email:n}));case 4:if(o=e.sent){e.next=7;break}return e.abrupt("return",s.json({message:"User doesn't exists"}));case 7:if(bcrypt.compareSync(a,o.password)){e.next=10;break}return e.abrupt("return",s.json({message:"Password incorrect"}));case 10:i=jwt.sign({id:o._id},process.env.JWT_SECRET_KEY,{expiresIn:"15d"}),s.status(200).json({message:"Student logged in successfully",student:o,Token:i}),e.next=17;break;case 14:e.prev=14,e.t0=e.catch(0),s.status(500).json({Message:"Internal server error",Error:e.t0.message});case 17:case"end":return e.stop()}},null,null,[[0,14]])},resetPasswordLink=function(r,s){var t,n,a,o,i;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return t=r.body.email,e.next=3,regeneratorRuntime.awrap(Student.findOne({email:t}));case 3:if(n=e.sent){e.next=6;break}return e.abrupt("return",s.status(404).json({message:"User not found"}));case 6:a=jwt.sign({id:n._id},process.env.JWT_SECRET_KEY_FOR_RESET_PASSWORD_LINK,{expiresIn:"10m"}),o=nodemailer.createTransport({service:"gmail",auth:{user:process.env.EMAIL_USER,pass:process.env.EMAIL_PASS}}),i={from:process.env.EMAIL_USER,to:t,subject:"Password reset Link",text:"Please use the following link to reset your password: http://localhost:8000/reset-password/".concat(a)},o.sendMail(i,function(e,r){if(e)return s.status(500).send("Error sending email");s.send("Password reset email sent")});case 10:case"end":return e.stop()}})},resetPassword=function(r,s){var t,n,a,o,i;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return t=r.params.token,n=r.body.newPassword,e.prev=2,a=jwt.verify(t,process.env.JWT_SECRET_KEY_FOR_RESET_PASSWORD_LINK),o=a.id,e.next=7,regeneratorRuntime.awrap(bcrypt.hash(n,10));case 7:return i=e.sent,e.next=10,regeneratorRuntime.awrap(Student.findByIdAndUpdate(o,{password:i}));case 10:s.json({Message:"Password updated successfully"}),e.next=16;break;case 13:e.prev=13,e.t0=e.catch(2),s.status(400).send("Invalid or expired token");case 16:case"end":return e.stop()}},null,null,[[2,13]])};module.exports={register:register,login:login,resetPasswordLink:resetPasswordLink,resetPassword:resetPassword};
//# sourceMappingURL=authController.min.js.map
