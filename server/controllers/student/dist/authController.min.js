"use strict";var Student=require("../../models/users/studentModel.js"),jwt=require("jsonwebtoken");require("dotenv").config();var bcrypt=require("bcryptjs"),twilio=require("twilio"),register=function(r,t){var s,n,a,o,u,i,c,d;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,s=r.body,n=s.email,a=s.firstname,o=s.lastname,u=s.password,i="".concat(r.file.destination,"/").concat(r.file.filename),e.next=5,regeneratorRuntime.awrap(Student.findOne({email:n}));case 5:if(e.sent)return e.abrupt("return",t.json({message:"User already exists with the email ID"}));e.next=8;break;case 8:return c=bcrypt.hashSync(u,10),d=new Student({email:n,firstname:a,lastname:o,password:c,profilepic:i}),e.next=12,regeneratorRuntime.awrap(d.save());case 12:t.status(201).json({Message:"Student registered successfully",Student:d}),e.next=18;break;case 15:e.prev=15,e.t0=e.catch(0),t.status(500).json({Message:"Internal server error",Error:e.t0.message});case 18:case"end":return e.stop()}},null,null,[[0,15]])},login=function(r,t){var s,n,a,o,u;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,s=r.body,n=s.email,a=s.password,e.next=4,regeneratorRuntime.awrap(Student.findOne({email:n,password:a}));case 4:if(o=e.sent){e.next=7;break}return e.abrupt("return",t.json({message:"User doesn't exists"}));case 7:if(bcrypt.compareSync(a,o.password)){e.next=10;break}return e.abrupt("return",t.json({message:"Passwords did not match"}));case 10:u=jwt.sign({id:o._id},process.env.JWT_SECRET_KEY,{expiresIn:"15d"}),t.status(200).json({message:"Student logged in successfully",student:o,Token:u}),e.next=17;break;case 14:e.prev=14,e.t0=e.catch(0),t.status(500).json({Message:"Internal server error",Error:e.t0.message});case 17:case"end":return e.stop()}},null,null,[[0,14]])},sendOtp=function(r,t){var s,n,a,o;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,s=r.body.email,e.next=4,regeneratorRuntime.awrap(Student.find({email:s}));case 4:if(e.sent){e.next=9;break}return e.abrupt("return",t.status(404).json({message:"No user found with this email ID"}));case 9:for("",a=(n="1234567890").length,o=0;o<6;o++)n[Math.floor(Math.random()*a)];"USad386f4438ea7568b38b822db298048b","";case 15:e.next=20;break;case 17:e.prev=17,e.t0=e.catch(0),t.status(500).json({message:"Internal server error",Error:e.t0.message});case 20:case"end":return e.stop()}},null,null,[[0,17]])},forgotPassword=function(r,t){return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:try{console.log(r.cookies)}catch(e){t.json({message:"Internal server error",Error:e.message})}case 1:case"end":return e.stop()}})};module.exports={register:register,login:login,sendOtp:sendOtp,forgotPassword:forgotPassword};
//# sourceMappingURL=authController.min.js.map
