"use strict";var CourseModel=require("../../models/course/courseModel.js"),multer=require("multer"),cloudinary=require("cloudinary").v2,path=require("path"),createCourse=function(r,t){var n,o,s,a,u;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,n=r.body,o=n.title,s=n.price,a=n.description,e.next=4,regeneratorRuntime.awrap(CourseModel.create({title:o,price:s,description:a}));case 4:u=e.sent,t.json(u),e.next=11;break;case 8:e.prev=8,e.t0=e.catch(0),t.json(e.t0.message);case 11:case"end":return e.stop()}},null,null,[[0,8]])},uploadVideos=function(r,n){var t,o,s,a,u,c;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,t=r.params.courseId,o=r.body,s=o.title,a=o.videoTitle,e.next=5,regeneratorRuntime.awrap(CourseModel.findById(t));case 5:if(u=e.sent,c=u.section,r.file||r.file.buffer){e.next=9;break}return e.abrupt("return",n.status(400).json({error:"No file provided in the request"}));case 9:cloudinary.uploader.upload_stream({resource_type:"video"},function(r,t){return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:if(r)return console.error("Error uploading to Cloudinary:",r),e.abrupt("return",n.status(500).json({error:"Error uploading to Cloudinary"}));e.next=3;break;case 3:return c.push({title:s,videos:[{title:a,url:t.secure_url}]}),e.next=6,regeneratorRuntime.awrap(u.save());case 6:n.status(201).json({message:"Video uploaded successfully",section:u.section});case 7:case"end":return e.stop()}})}).end(r.file.buffer),e.next=16;break;case 12:e.prev=12,e.t0=e.catch(0),console.error("Error uploading video:",e.t0),n.status(500).json({error:"Error uploading video"});case 16:case"end":return e.stop()}},null,null,[[0,12]])},resourceController=function(r,t){var n,o,s,a;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,n=r.params.courseId,o=r.body.title,r.user,s="".concat(r.file.destination,"/").concat(r.file.filename),e.next=7,regeneratorRuntime.awrap(courseModel.findById(n).populate("resources"));case 7:return(a=e.sent).resources.push({title:o,url:s}),e.next=11,regeneratorRuntime.awrap(a.save());case 11:t.json(a),e.next=17;break;case 14:e.prev=14,e.t0=e.catch(0),t.json(e.t0.message);case 17:case"end":return e.stop()}},null,null,[[0,14]])};module.exports={createCourse:createCourse,uploadVideos:uploadVideos,resourceController:resourceController};
//# sourceMappingURL=CreateCourseController.min.js.map
