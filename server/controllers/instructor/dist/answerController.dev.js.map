{"version":3,"sources":["answerController.js"],"names":["courseModel","require","answerController","req","res","params","id","courseId","answer","body","answeredBy","user","findById","course","discussion","discussions","disc","find","dis","_id","toString","save","status","json","message","error","module","exports"],"mappings":";;AAAA,IAAMA,WAAW,GAAIC,OAAO,CAAC,oCAAD,CAA5B;;AAGA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAMC,GAAN,EAAUC,GAAV;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAEMD,GAAG,CAACE,MAFV,EAEVC,EAFU,eAEVA,EAFU,EAENC,QAFM,eAENA,QAFM;AAGVC,UAAAA,MAHU,GAGAL,GAAG,CAACM,IAHJ,CAGVD,MAHU;AAIXE,UAAAA,UAJW,GAIEP,GAAG,CAACQ,IAAJ,CAASL,EAJX;AAAA;AAAA,0CAKIN,WAAW,CAACY,QAAZ,CAAqBL,QAArB,CALJ;;AAAA;AAKXM,UAAAA,MALW;AAMXC,UAAAA,UANW,GAMED,MAAM,CAACE,WANT;AAObC,UAAAA,IAPa,GAONF,UAAU,CAACG,IAAX,CAAgB,UAAAC,GAAG;AAAA,mBAAIA,GAAG,CAACC,GAAJ,CAAQC,QAAR,OAAuBd,EAA3B;AAAA,WAAnB,CAPM;AAQjBU,UAAAA,IAAI,CAACN,UAAL,GAAkBA,UAAlB,EACAM,IAAI,CAACR,MAAL,GAAcA,MADd;AARiB;AAAA,0CAUXK,MAAM,CAACQ,IAAP,EAVW;;AAAA;AAWjBjB,UAAAA,GAAG,CAACkB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CACI;AACIC,YAAAA,OAAO,EAAC;AADZ,WADJ;AAXiB;AAAA;;AAAA;AAAA;AAAA;AAkBjBpB,UAAAA,GAAG,CAACkB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAACC,YAAAA,OAAO,EAAC,uBAAT;AAAkCC,YAAAA,KAAK,EAAC,YAAMD;AAA9C,WAArB;;AAlBiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAzB;;AAqBAE,MAAM,CAACC,OAAP,GAAiBzB,gBAAjB","sourcesContent":["const courseModel  = require('../../models/course/courseModel.js')\r\n\r\n\r\nconst answerController = async(req,res)=>{\r\n    try {\r\n        const {id, courseId} = req.params\r\n        const {answer} = req.body\r\n        const answeredBy = req.user.id\r\n        const course = await courseModel.findById(courseId)\r\n        const discussion = course.discussions\r\n        let disc = discussion.find(dis => dis._id.toString() === id)\r\n        disc.answeredBy = answeredBy,\r\n        disc.answer = answer\r\n        await course.save()\r\n        res.status(200).json(\r\n            {\r\n                message:\"Answer sent\",\r\n            }\r\n        )\r\n\r\n    } catch (error) {\r\n        res.status(500).json({message:\"internal server error\", error:error.message})\r\n    }\r\n}\r\nmodule.exports = answerController"],"file":"answerController.dev.js"}