{"version":3,"sources":["dashboardController.js"],"names":["courseModel","require","student","dashboardController","req","res","find","limit","Students","Courses","status","json","message","courses","students","error","searchController","query","q","$or","title","$regex","$options","Coursedata","firstname","lastname","email","studentsData","module","exports"],"mappings":"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","sourcesContent":["const courseModel = require('../../models/course/courseModel.js')\r\nconst student = require('../../models/users/studentModel.js')\r\n\r\nconst dashboardController = async(req,res)=>{\r\n    try {\r\n        const Students = await student.find().limit(20)\r\n        const Courses =  await courseModel.find().limit(20)\r\n        if(!Students || !Courses){\r\n            return res.status(404).json({message:\"Error while fetching Data\"})\r\n        }\r\n        res.status(200).json({message:\"Fetched Data\", courses:Courses, students:Students})\r\n    } catch (error) {\r\n        res.status(500).json({message:\"Internal server error\", error:error.message})\r\n    }\r\n}\r\nconst searchController = async(req,res)=>{\r\n    try {\r\n        const query = req.query.q\r\n        const Coursedata = await courseModel.find({\r\n            $or: [\r\n              { title: { $regex: query, $options: \"i\" } }\r\n            ],\r\n          })\r\n        const studentsData = await student.find({\r\n            $or: [\r\n              { firstname: { $regex: query, $options: \"i\" } },\r\n              {lastname:{ $regex: query, $options: 'i'}},\r\n              {email:{ $regex:query, $options:'i'}}\r\n            ],\r\n          })\r\n          if( !Coursedata || !studentsData){\r\n                return res.status(404).json({message:\"Not found\"})\r\n          }\r\n          res.status(200).json({message:\"Results fetched\", Students:studentsData, courses:Coursedata })\r\n    } catch (error) {\r\n        res.status(500).json({message:\"Internal server error\", error:error.message})\r\n    }\r\n}\r\nmodule.exports = {dashboardController, searchController}\r\n"],"file":"dashboardController.dev.js"}