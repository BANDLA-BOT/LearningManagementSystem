{"version":3,"sources":["dashboardController.js"],"names":["courseModel","require","student","dashboardController","req","res","Students","Courses","regeneratorRuntime","async","_context","prev","next","awrap","find","limit","sent","abrupt","status","json","message","courses","students","t0","error","stop","searchController","query","Coursedata","studentsData","_context2","q","$or","title","$regex","$options","firstname","lastname","email","module","exports"],"mappings":"aAAA,IAAMA,YAAcC,QAAQ,sCACtBC,QAAUD,QAAQ,sCAElBE,oBAAsB,SAAMC,EAAIC,GAAV,IAAAC,EAAAC,EAAA,OAAAC,mBAAAC,MAAA,SAAAC,GAAA,OAAA,OAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAAA,OAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAAAJ,mBAAAK,MAEGX,QAAQY,OAAOC,MAAM,KAFxB,KAAA,EAAA,OAEdT,EAFcI,EAAAM,KAAAN,EAAAE,KAAA,EAAAJ,mBAAAK,MAAAb,YAAtBG,OAAAA,MAA4BC,KAAN,KAAA,EAAA,GAAtBD,EAAsBO,EAAAM,KAAAV,GAAAC,EAAA,CAAAG,EAAAE,KAAA,EAAA,MAAA,OAAAF,EAAAO,OAAA,SAAAZ,EAAAa,OAAA,KAAAC,KAAA,CAAAC,QAAA,+BAAA,KAAA,EAAAf,EAAAa,OAAA,KAAAC,KAAA,CAAAC,QAAA,eAAAC,QAAAd,EAAAe,SAAAhB,IAAAI,EAAAE,KAAA,GAAA,MAAA,KAAA,GAAAF,EAAAC,KAAA,GAAAD,EAAAa,GAAAb,EAAA,MAAA,GAAAL,EAAAa,OAAA,KAAAC,KAAA,CAAAC,QAAA,wBAAAI,MAAAd,EAAAa,GAAAH,UAAA,KAAA,GAAA,IAAA,MAAA,OAAAV,EAAAe,SAAA,KAAA,KAAA,CAAA,CAAA,EAAA,OAYtBC,iBAAmB,SAAMtB,EAAIC,GAAV,IAAAsB,EAAAC,EAAAC,EAAA,OAAArB,mBAAAC,MAAA,SAAAqB,GAAA,OAAA,OAAAA,EAAAnB,KAAAmB,EAAAlB,MAAA,KAAA,EAAA,OAAAkB,EAAAnB,KAAA,EAVXL,EAFcF,EAAAuB,MAAAI,EAYHD,EAAAlB,KAAA,EAAAJ,mBAAAK,MAZGb,YAAAc,KAAA,CAAAkB,IAAA,CAiBd,CAAEC,MAAO,CAAEC,OAAQP,EAAOQ,SAAU,UALzB,KAAA,EAAA,OAZGP,EAYHE,EAAAd,KAAAc,EAAAlB,KAAA,EAAAJ,mBAAAK,MAQUX,QAAQY,KAAK,CApBpBkB,IAIhB1B,CAJgB,CAAA8B,UAAA,CAAAF,OAAAP,EAAAQ,SAAA,MAAA,CAAAE,SAAA,CAAAH,OAAAP,EAAAQ,SAAA,MAAA,CAAAG,MAAA,CAAAJ,OAAAP,EAAAQ,SAAA,UAYH,KAAA,EAAA,GAQXN,EARWC,EAAAd,KAPgBI,GAAQS,EAOxB,CAAAC,EAAAlB,KAAA,GAAA,MAAA,OAAAkB,EAAAb,OAAA,SAZGZ,EAAAa,OAAA,KAAAC,KAAA,CAAAC,QAAA,eAYH,KAAA,GAZGf,EAAAa,OAAA,KAAAC,KAAA,CAAAC,QAAA,kBAAAd,SAAAuB,EAAAR,QAAAO,IAYHE,EAAAlB,KAAA,GAAA,MAAA,KAAA,GAAAkB,EAAAnB,KAAA,GAAAmB,EAAAP,GAAAO,EAAA,MAAA,GALKV,EAAAA,OAAO,KAACD,KAAA,CAAAC,QAAT,wBAAAI,MAAAM,EAAAP,GAAAH,UAKJ,KAAA,GAAA,IAAA,MAAA,OAAAU,EAAAL,SAAA,KAAA,KAAA,CAAA,CAAA,EAAA,OALIc,OAAAC,QAArB,CAAArC,oBAAAA,oBAAAuB,iBAAAA","file":"dashboardController.min.js","sourcesContent":["const courseModel = require('../../models/course/courseModel.js')\r\nconst student = require('../../models/users/studentModel.js')\r\n\r\nconst dashboardController = async(req,res)=>{\r\n    try {\r\n        const Students = await student.find().limit(20)\r\n        const Courses =  await courseModel.find().limit(20)\r\n        if(!Students || !Courses){\r\n            return res.status(404).json({message:\"Error while fetching Data\"})\r\n        }\r\n        res.status(200).json({message:\"Fetched Data\", courses:Courses, students:Students})\r\n    } catch (error) {\r\n        res.status(500).json({message:\"Internal server error\", error:error.message})\r\n    }\r\n}\r\nconst searchController = async(req,res)=>{\r\n    try {\r\n        const query = req.query.q\r\n        const Coursedata = await courseModel.find({\r\n            $or: [\r\n              { title: { $regex: query, $options: \"i\" } }\r\n            ],\r\n          })\r\n        const studentsData = await student.find({\r\n            $or: [\r\n              { firstname: { $regex: query, $options: \"i\" } },\r\n              {lastname:{ $regex: query, $options: 'i'}},\r\n              {email:{ $regex:query, $options:'i'}}\r\n            ],\r\n          })\r\n          if( !Coursedata || !studentsData){\r\n                return res.status(404).json({message:\"Not found\"})\r\n          }\r\n          res.status(200).json({message:\"Results fetched\", Students:studentsData, courses:Coursedata })\r\n    } catch (error) {\r\n        res.status(500).json({message:\"Internal server error\", error:error.message})\r\n    }\r\n}\r\nmodule.exports = {dashboardController, searchController}\r\n"]}