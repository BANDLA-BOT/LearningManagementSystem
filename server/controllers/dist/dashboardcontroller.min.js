"use strict";var Student=require("../models/users/studentModel.js"),courseModel=require("../models/course/courseModel.js"),getProfile=function(r,t){var n,s,u;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return n=r.user,console.log(n),e.prev=2,e.next=5,regeneratorRuntime.awrap(Student.findById({_id:n.id}).select("-password"));case 5:return s=e.sent,e.next=8,regeneratorRuntime.awrap(courseModel.find().limit(4));case 8:if(u=e.sent,s){e.next=11;break}return e.abrupt("return",t.json({message:"No student found "}));case 11:if(u){e.next=13;break}return e.abrupt("return",t.json({message:"No courses available currently"}));case 13:t.json({message:"Students Profile",Profile:s,courses:u}),console.log(s),e.next=19;break;case 17:e.prev=17,e.t0=e.catch(2);case 19:case"end":return e.stop()}},null,null,[[2,17]])},enrollCourse=function(r,t){var n,s,u,a,o;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return n=r.params.courseId,s=r.user,e.next=4,regeneratorRuntime.awrap(courseModel.findById({_id:n}));case 4:return u=e.sent,e.next=7,regeneratorRuntime.awrap(Student.findById({_id:s.id}));case 7:if(a=e.sent,e.prev=8,a){e.next=11;break}return e.abrupt("return",t.status(400).json({message:"Student not found"}));case 11:if(u){e.next=13;break}return e.abrupt("return",t.status(400).json({message:"Course not found"}));case 13:return a.enrolled.push(u),e.next=16,regeneratorRuntime.awrap(Student.findById({_id:s.id}).populate("enrolled"));case 16:return o=e.sent,e.next=19,regeneratorRuntime.awrap(a.save());case 19:t.status(200).json({Message:"Course enrolled successfuly",Student:o}),e.next=25;break;case 22:e.prev=22,e.t0=e.catch(8),t.status(500).json({message:"Internal server error",Error:e.t0.message});case 25:case"end":return e.stop()}},null,null,[[8,22]])};module.exports={getProfile:getProfile,enrollCourse:enrollCourse};
//# sourceMappingURL=dashboardcontroller.min.js.map
