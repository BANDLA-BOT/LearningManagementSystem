{"version":3,"sources":["reviewController.js"],"names":["courseModel","require","studentModel","reviewController","req","res","courseId","userId","review","course","student","regeneratorRuntime","async","_context","prev","next","params","user","body","awrap","findById","sent","_id","id","abrupt","status","json","message","save","t0","stop","deleteReview","_req$params","reviewedUserId","deletedReview","_context2","findByIdAndUpdate","$pull","reviews","reviewBy.userId","reviewBy","error","module","exports"],"mappings":"aAAA,IAAMA,YAAcC,QAAQ,mCACtBC,aAAeD,QAAQ,mCAEvBE,iBAAoB,SAAMC,EAAIC,GAAV,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAC,mBAAAC,MAAA,SAAAC,GAAA,OAAA,OAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAAA,OAFpBb,EAAeD,EAAQe,OAAvBd,SAIIK,EAASH,EAAIa,KAFjBd,EAAgBC,EAAIc,KAApBf,OAAoBU,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAAAJ,mBAAAQ,MAAAnB,YAAAoB,SAAAd,IAAA,KAAA,EAAA,OAAAG,EAAAI,EAAAQ,KAAAR,EAAAE,KAAA,EAAAJ,mBAAAQ,MAAAjB,aAAAkB,SAAA,CAAAE,IAAAf,EAAAgB,MAAA,KAAA,EAAA,GAAAb,EAAAG,EAAAQ,KAAAZ,GAAAC,EAAA,CAAAG,EAAAE,KAAA,GAAA,MAAA,OAAAF,EAAAW,OAAA,SAAAnB,EAAAoB,OAAA,KAAAC,KAAA,CAAAC,QAAA,sBAAA,KAAA,GAAA,OAEhBpB,EAAAA,QAAaU,KAFG,CAGfT,SAAUJ,CAHKG,OAAAG,EAAAY,IAAAd,OAAAA,KAAAK,EAAAE,KAAA,GAAAJ,mBAAAQ,MAAAV,EAAAmB,QAAA,KAAA,GAKZnB,EAAAA,OALY,KAAAiB,KAAA,CAAAC,QAAA,8BAAAd,EAAAE,KAAA,GAAA,MAAA,KAAA,GAAAF,EAAAC,KAAA,GAAAD,EAAAgB,GAAAhB,EAAA,MAAA,GAM2BS,EAAAA,OAAIf,KAAOgB,KAAAA,CAAAA,QAAAA,EAAAA,GAAAA,UANtC,KAAA,GAAA,IAAA,MAAA,OAAAV,EAAAiB,SAAA,KAAA,KAAA,CAAA,CAAA,EAAA,OAAAC,aAAA,SAAA3B,EAAAC,GAAA,IAAA2B,EAAAC,EAAA3B,EAAA4B,EAAA,OAAAvB,mBAAAC,MAAA,SAAAuB,GAAA,OAAA,OAAAA,EAAArB,KAAAqB,EAAApB,MAAA,KAAA,EAAA,OAAAoB,EAAArB,KAAA,EAAAkB,EAyBmB5B,EAAIY,OAAjCiB,EAzBUD,EAyBVC,eAAgB3B,EAzBN0B,EAyBM1B,SAzBN6B,EAAApB,KAAA,EAAAJ,mBAAAQ,MAAAnB,YAAAoC,kBAAA9B,EAAA,CAAA+B,MAAA,CAAAC,QAAA,CAAAC,kBAAAN,KAAA,CAQeN,KAAO,KARtB,KAAA,EAAAO,EAAAC,EAAAd,KAAAhB,EAAAqB,KAAA,CAAAC,QAAA,8BAAAO,cAAAA,IAAAC,EAAApB,KAAA,GAAA,MAAA,KAAA,EAAAoB,EAAArB,KAAA,EAAAqB,EAAAN,GAAAM,EAAA,MAAA,GAWdK,EAAAA,OAAAA,KAASd,KAAA,CAAAC,QAAA,wBAAAc,MAAAN,EAAAN,GAAAF,UAXK,KAAA,GAAA,IAAA,MAAA,OAAAQ,EAAAL,SAAA,KAAA,KAAA,CAAA,CAAA,EAAA,MAUEY,OAAAC,QAApB,CAAAxC,iBAAAA,iBAAA4B,aAAAA","file":"reviewController.min.js","sourcesContent":["const courseModel = require('../models/course/courseModel.js')\r\nconst studentModel = require('../models/users/studentModel.js')\r\n\r\nconst reviewController  = async(req,res)=>{\r\n    const { courseId } = req.params\r\n    const userId = req.user\r\n    const {review} = req.body\r\n    try {\r\n        const course = await courseModel.findById(courseId)\r\n        const student = await studentModel.findById({_id:userId.id})\r\n        if(!course || !student){\r\n            return res.status(404).json({message:\"Course not found\"})\r\n        }\r\n        course.reviews.push({\r\n            reviewBy:{\r\n                userId:student._id,\r\n                review\r\n            }\r\n        })\r\n        await course.save()\r\n        res.status(201).json({message:\"Review added successfully\"})\r\n        \r\n    } catch (error) {\r\n        res.status(500).json({ message: error.message });\r\n    }\r\n}\r\nconst deleteReview = async(req, res)=>{\r\n    try {\r\n        const { reviewedUserId, courseId } = req.params\r\n        const deletedReview = await courseModel.findByIdAndUpdate(\r\n            courseId,   \r\n            {\r\n                $pull:{reviews:{'reviewBy.userId':reviewedUserId}}\r\n            },\r\n            {\r\n                new:true\r\n            }\r\n        )\r\n        res.json({message:\"Review deleted successfully\", deletedReview:deletedReview})\r\n    } catch (error) {\r\n        res.status(500).json({message:\"Internal server error\", error:error.message})\r\n    }\r\n}\r\n\r\nmodule.exports = {reviewController, deleteReview}"]}