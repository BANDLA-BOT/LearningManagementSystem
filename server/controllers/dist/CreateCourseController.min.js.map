{"version":3,"sources":["CreateCourseController.js"],"names":["CourseModel","require","multer","storage","diskStorage","destination","req","file","cb","Date","now","path","extname","originalname","upload","exports","fields","name","maxCount","res","_req$body","title","price","rating","reviews","resources","description","instructor","_section","newCourse","regeneratorRuntime","async","_context","prev","next","body","section","createCourse","awrap","save","json","message","t0","Error","stop","sections","JSON","parse","map","sec","video","filter","vid","filename","concat","index","videoIndex","thumbnail","error","status","addVideos"],"mappings":"aAAA,IAAMA,YAAcC,QAAQ,mCACtBC,OAASD,QAAQ,UADjBD,KAAAA,QAAcC,QAOdE,QAAUD,OAAOE,YAAY,CAC/BC,YAAY,SAACC,EAAIC,EAAMC,GADrBL,EAAO,KAAGD,YAERM,SAAS,SAAAF,EAAAC,EAATC,GAF2BA,EAAA,KAAAC,KAAAC,MAAAC,KAAAC,QAAAL,EAAAM,kBAM9BC,OAAAZ,OAAA,CAAAC,QAAAA,UAELY,QAAMD,OAASZ,OAAOc,OAAA,CAACb,CAAAA,KAAO,aAACA,SAAAA,GAA/B,CAAAc,KAAA,YAAAC,SAAA,KAGwBA,IAAAA,aAAS,SAAAZ,EAAAa,GAAA,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAC,mBAAAC,MAAA,SAAAC,GAAA,OAAA,OAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAAA,OAAAF,EAAAC,KAAA,EAAAb,EAC7Bd,EAAA6B,KAAMd,EADuBD,EACvBC,MAANC,EAD6BF,EAC7BE,MAAAC,EAD6BH,EAC7BG,OAAAC,EAD6BJ,EAC7BI,QAAAC,EAD6BL,EAC7BK,UAAAC,EAD6BN,EAC7BM,YAAAC,EAD6BP,EAC7BO,WAAAS,EAD6BhB,EAC7BgB,QAA4BP,EAAA,IAAA7B,YAAA,CAFhCqB,MAAAA,EAUYC,MAAAA,EALNe,OAAAA,EAAeb,QAAAA,EAQTE,YAAAA,EARSC,WAAAA,EAAAF,UAAAA,EAAAW,QAAAA,IAJYJ,EAAAE,KAAA,EAAAJ,mBAAAQ,MAIZT,EAAAU,QAJY,KAAA,EAIZpB,EAAAqB,KAAA,CAAAC,QAE4EN,8BAA3Eb,OAFDO,IAJYG,EAAAE,KAAA,GAAA,MAAA,KAAA,EAAAF,EAAAC,KAAA,EAAAD,EAAAU,GAAAV,EAAA,MAAA,GAQrBX,EAAAA,OAAAA,KAD8BmB,KAAA,CAAAC,QAAA,wBAAAE,MAAAX,EAAAU,GAAAD,UAPT,KAAA,GAAA,IAAA,MAAA,OAAAT,EAAAY,SAAA,KAAA,KAAA,CAAA,CAAA,EAAA,MAYrBlB,UAAAA,SAAWpB,GAAXoB,IAAAA,EAAAA,EAAAA,OAAAA,mBAAAA,MAAAA,SAAAA,GAAAA,OAAAA,OAAAA,EAAAA,KAAAA,EAAAA,MAAAA,KAAAA,EACAC,IACAF,EAAAA,MAAAA,WAP8B,GAQ9BW,EAAAA,EAAAA,MAAAA,WAAAA,GAR8BS,EAHrBC,KAAAC,MAAAX,SAAAS,EAAAG,IAAA,SAAAC,EAaPpB,GAcYqB,MAAMC,OAAO,SAAAC,GAAG,OAAIA,EAAIC,WAAJ,WAAAC,OAA4BC,EAA5B,aAA4CP,IAAI,SAACE,EAAOM,GAAR,MAAsB,CA3B/FnC,MAAA6B,EAAArC,aAcbM,UAASsC,EAAAD,GAAA,WAAAF,OAAAG,EAAAD,GAAAH,UAAA,GAACZ,UAAQ,WAAAa,OAAAJ,EAAAG,eAdL,MAAAK,IAQThC,KAAAA,EAAAA,IAAAA,MAAAA,OAAAA,EAAAA,WAQJP,OAAAA,QAAIwC,CAAAA,aAAAA,aAAiBC,UAAAA","file":"CreateCourseController.min.js","sourcesContent":["const CourseModel = require('../models/course/courseModel.js')\r\nconst multer = require('multer')\r\nconst path = require('path')\r\n\r\n\r\n//multer \r\n\r\nconst storage = multer.diskStorage({\r\n    destination:(req,file, cb)=>{\r\n        cb(null, 'videos/')\r\n    },\r\n    filename:(req,file, cb)=>{\r\n        cb(null, Date.now() + path.extname(file.originalname))\r\n    }\r\n})\r\nconst upload = multer({storage:storage})\r\n\r\nexports.upload = upload.fields([\r\n    {name:'videosFile', maxCount:1},\r\n    {name:\"thumbnail\", maxCount:1}\r\n]);\r\n\r\nconst createCourse = async (req,res)=>{\r\n    try {\r\n        const {title, price, rating, reviews, resources, description, instructor, section} = req.body\r\n        const newCourse = new CourseModel({\r\n            title,\r\n            price,\r\n            rating,\r\n            reviews,\r\n            description,\r\n            instructor,\r\n            resources,\r\n            section,\r\n        })\r\n        await newCourse.save()\r\n        res.json({message:\"Course created successfully\", Course:newCourse})\r\n    } catch (error) {\r\n        res.status(500).json({message:\"Internal server error\", Error:error.message})\r\n    }\r\n}\r\n\r\nconst addVideos = async(req,res)=>{\r\n   try {\r\n    const videos = req.files['videoFile'] || []\r\n    const thumbnail = req.files['thumbnail'] || []\r\n    const sections = JSON.parse(section)\r\n\r\n    const uploadVideos = sections.map((sec, index)=>{\r\n        const secVideos = video.filter(vid => vid.filename === `section[${index}].video`).map((video, videoIndex)=>({\r\n            title:video.originalname,\r\n            thumbnail:thumbnail[videoIndex] ? `/videos/${thumbnail[videoIndex].filename}`:'',\r\n            videoFile: `/videos/${video.filename}`\r\n        }))\r\n    })\r\n   } catch (error) {\r\n    \r\n   }\r\n}\r\n\r\n\r\nmodule.exports = {createCourse,addVideos}"]}